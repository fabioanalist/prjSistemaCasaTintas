/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pesquisa;

import javax.swing.JOptionPane;
import lib.jdb.jdbquery.JDBQuery;
import principal.FrmLogin;

/**
 *
 * @author patri
 */
public class iFrmPesUsuario extends javax.swing.JInternalFrame {
    
    public JDBQuery qryAtribuiUsu, qryPesUsuario;
    pessoa.iFrmCadUsuario formUsu;
    private String usuarioLogado;
    
    /**
     * Creates new form iFrmPesquisa
     */
    public iFrmPesUsuario(pessoa.iFrmCadUsuario formUsu, JDBQuery qryAtribuiUsu) {
        
        this.formUsu = formUsu;
        this.qryAtribuiUsu = qryAtribuiUsu;
        usuarioLogado = FrmLogin.usuario.getNomeUsuario();
        
        qryPesUsuario = new JDBQuery();
        qryPesUsuario.setJDBConnection(principal.Principal.conexao.getConexao());
        qryPesUsuario.setLanguage("pt");
        qryPesUsuario.setConcurUpdatable(false);
        qryPesUsuario.setTimeStampFormat("dd/MM/yyyy HH:mm:ss");
        qryPesUsuario.setSQL("SELECT "
                            + "nome, "
                            + "senha, "
                            + "doc_principal_funcionario, "
                            + "administrador, "
                            + "tipo, "
                            + "ativo, "
                            + "tipos_usuario.descricao, "
                            + "usuarios.data_inclusao, "
                            + "usuarios.data_modificacao,\n" +
                            "	CASE\n" +
                            "	WHEN administrador = true THEN 'Sim' ELSE 'Não'\n" +
                            "	END AS 'desc_administrador',\n" +
                            "	CASE\n" +
                            "	WHEN ativo = true THEN 'Sim' ELSE 'Não'\n" +
                            "	END AS 'desc_ativo'\n" +
                            "FROM usuarios "
                            + "LEFT JOIN tipos_usuario "
                            + "ON usuarios.tipo = tipos_usuario.id "
                             + "WHERE administrador = 0 AND "
                             + "nome <> '" + usuarioLogado + "'");
        
        initComponents();
        
        qryPesUsuario.execQuery();
        
        tbUsuario.setFieldsTitle("nome", "Usuário");
        tbUsuario.setFieldsTitle("descricao", "Tipo");
        tbUsuario.setFieldsTitle("desc_administrador", "Administrador");
        tbUsuario.setFieldsTitle("desc_ativo", "Ativo");
        
        jDBLabelCount1.setjDBQuery(qryPesUsuario);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Painel = new javax.swing.JPanel();
        btnPesquisa = new javax.swing.JButton();
        scrlUsuario = new javax.swing.JScrollPane();
        tbUsuario = new lib.jdb.control.jdbtable.JDBTable();
        txtPesquisa = new javax.swing.JTextField();
        lblQuantidadeItens = new javax.swing.JLabel();
        jDBLabelCount1 = new lib.jdb.control.jdblabelcount.JDBLabelCount();
        cbxAdmin = new lib.jdb.control.jdbcheckbox.JDBCheckBox();
        jLabel1 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setTitle("Pesquisa de Usuários");
        setPreferredSize(new java.awt.Dimension(600, 418));

        Painel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, new java.awt.Color(204, 204, 204), new java.awt.Color(153, 153, 153)), "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial", 1, 12), new java.awt.Color(102, 102, 102))); // NOI18N

        btnPesquisa.setFont(principal.FrmLogin.fontePadrao);
        btnPesquisa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/look.png"))); // NOI18N
        btnPesquisa.setText("Pesquisar");
        btnPesquisa.setNextFocusableComponent(txtPesquisa);
        btnPesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisaActionPerformed(evt);
            }
        });

        scrlUsuario.setFont(principal.FrmLogin.fontePadrao);

        tbUsuario.setJDBQuery(qryPesUsuario);
        tbUsuario.setEditable(false);
        tbUsuario.setFont(principal.FrmLogin.fontePadrao);
        tbUsuario.setInvisibleFields("senha doc_principal_funcionario data_inclusao data_modificacao administrador ativo tipo");
        tbUsuario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbUsuarioMouseClicked(evt);
            }
        });
        scrlUsuario.setViewportView(tbUsuario);

        txtPesquisa.setFont(principal.FrmLogin.fontePadrao);
        txtPesquisa.setToolTipText("");
        txtPesquisa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPesquisaKeyPressed(evt);
            }
        });

        lblQuantidadeItens.setFont(principal.FrmLogin.fontePadrao);
        lblQuantidadeItens.setText("Quantidade de itens:");

        jDBLabelCount1.setFont(principal.FrmLogin.fontePadrao);
        jDBLabelCount1.setText("jDBLabelCount1");

        cbxAdmin.setText("Administrador");

        jLabel1.setFont(principal.FrmLogin.fontePadrao);
        jLabel1.setText("Nome:");

        javax.swing.GroupLayout PainelLayout = new javax.swing.GroupLayout(Painel);
        Painel.setLayout(PainelLayout);
        PainelLayout.setHorizontalGroup(
            PainelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PainelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrlUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, 540, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PainelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(lblQuantidadeItens)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jDBLabelCount1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PainelLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPesquisa)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbxAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnPesquisa)))
                .addContainerGap())
        );
        PainelLayout.setVerticalGroup(
            PainelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PainelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPesquisa)
                    .addComponent(txtPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbxAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrlUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, 279, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PainelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblQuantidadeItens)
                    .addComponent(jDBLabelCount1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(Painel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(10, 10, 10))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(Painel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(15, 15, 15))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tbUsuarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbUsuarioMouseClicked
        if(evt.getClickCount() == 2){
            // criado método para carregar pesquisa, substituindo código anteriormente alocado aqui.
            carregarPesquisaSelecionada();
        }
    }//GEN-LAST:event_tbUsuarioMouseClicked

    private void btnPesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisaActionPerformed
        
        String sql;
        
        sql = "SELECT "
                            + "nome, "
                            + "senha, "
                            + "doc_principal_funcionario, "
                            + "administrador, "
                            + "tipo, "
                            + "ativo, "
                            + "tipos_usuario.descricao, "
                            + "usuarios.data_inclusao, "
                            + "usuarios.data_modificacao,\n" +
                            "	CASE\n" +
                            "	WHEN administrador = true THEN 'Sim' ELSE 'Não'\n" +
                            "	END AS 'desc_administrador',\n" +
                            "	CASE\n" +
                            "	WHEN ativo = true THEN 'Sim' ELSE 'Não'\n" +
                            "	END AS 'desc_ativo'\n" +
                            "FROM usuarios "
                            + "LEFT JOIN tipos_usuario "
                            + "ON usuarios.tipo = tipos_usuario.id"
                + " WHERE nome LIKE '%"+txtPesquisa.getText()+"%'";
        
        if(cbxAdmin.isSelected()){
            sql += " AND administrador = '1' AND "
                    + "nome <> '" + usuarioLogado + "'";
        }else{
            sql += " AND administrador = '0' AND "
                    + "nome <> '" + usuarioLogado + "'";
        }
        
        if(!cbxAdmin.isSelected()){
            qryPesUsuario.setSQL(sql);
            qryPesUsuario.execQuery();
        }else if(FrmLogin.usuario.isAdmin() && cbxAdmin.isSelected()){
            qryPesUsuario.setSQL(sql);
            qryPesUsuario.execQuery();
        }else{
            JOptionPane.showMessageDialog(this, 
                    "Pesquisa somente para usuários administradores", 
                    "Atenção", JOptionPane.INFORMATION_MESSAGE);
        }
        
    }//GEN-LAST:event_btnPesquisaActionPerformed

    private void txtPesquisaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPesquisaKeyPressed
        if(evt.getKeyChar() == '\n'){
            
            String sql;
        
            sql = "SELECT "
                                + "nome, "
                                + "senha, "
                                + "doc_principal_funcionario, "
                                + "administrador, "
                                + "tipo, "
                                + "ativo, "
                                + "tipos_usuario.descricao, "
                                + "usuarios.data_inclusao, "
                                + "usuarios.data_modificacao,\n" +
                                "	CASE\n" +
                                "	WHEN administrador = true THEN 'Sim' ELSE 'Não'\n" +
                                "	END AS 'desc_administrador',\n" +
                                "	CASE\n" +
                                "	WHEN ativo = true THEN 'Sim' ELSE 'Não'\n" +
                                "	END AS 'desc_ativo'\n" +
                                "FROM usuarios "
                                + "INNER JOIN tipos_usuario "
                                + "ON usuarios.tipo = tipos_usuario.id"
                    + " WHERE nome LIKE '%"+txtPesquisa.getText()+"%'";

            if(cbxAdmin.isSelected()){
                sql += " AND administrador = '1'";
            }
        
        qryPesUsuario.setSQL(sql);
        qryPesUsuario.execQuery();
        
        }
    }//GEN-LAST:event_txtPesquisaKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Painel;
    private javax.swing.JButton btnPesquisa;
    private lib.jdb.control.jdbcheckbox.JDBCheckBox cbxAdmin;
    private lib.jdb.control.jdblabelcount.JDBLabelCount jDBLabelCount1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblQuantidadeItens;
    private javax.swing.JScrollPane scrlUsuario;
    private lib.jdb.control.jdbtable.JDBTable tbUsuario;
    private javax.swing.JTextField txtPesquisa;
    // End of variables declaration//GEN-END:variables
    
    private void carregarPesquisaSelecionada(){
        
        qryAtribuiUsu.setSQL(String.format("SELECT "
                + "nome, "
                + "senha, "
                + "doc_principal_funcionario, "
                + "administrador, "
                + "tipo, "
                + "ativo, "
                + "data_inclusao, "
                + "data_modificacao "
                + "FROM "
                + "usuarios "
                + "WHERE "
                + "nome='%s'",
                qryPesUsuario.getCurrentFieldValueAsString("nome")));
        
        qryAtribuiUsu.execQuery();
        
        formUsu.atribuirCampos();
        doDefaultCloseAction();
        
    }

}