/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pesquisa;

import lib.jdb.jdbquery.JDBQuery;

/**
 *
 * @author patri
 */
public class iFrmPesPessoa extends javax.swing.JInternalFrame {
    
    public JDBQuery qryPesPessoa, qryAtribuiPes;
    pessoa.iFrmCadPessoa formPes;
    /**
     * Creates new form iFrmPesquisa
     */
    public iFrmPesPessoa(pessoa.iFrmCadPessoa formPes, JDBQuery qryAtribuiPes) {
        
        this.qryAtribuiPes = qryAtribuiPes;
        this.formPes = formPes;
        
        qryPesPessoa = new JDBQuery();
        qryPesPessoa.setJDBConnection(principal.Principal.conexao.getConexao());
        qryPesPessoa.setLanguage("pt");
        qryPesPessoa.setConcurUpdatable(false);
        qryPesPessoa.setTimeStampFormat("dd/MM/yyyy HH:mm:ss");
        
        qryPesPessoa.setSQL("SELECT "
                            + "doc_principal, "
                            + "doc_secundario, "
                            + "tipo, "
                            + "cliente, "
                            + "fornecedor, "
                            + "funcionario, "
                            + "nome, "
                            + "fantasia, "
                            + "estado_civil, "
                            + "pessoa_autorizada, "
                            + "data_nascimento, "
                            + "limite_credito, "
                            + "cep_cidade_natal, "
                            + "ativo, "
                            + "data_inclusao, "
                            + "data_modificacao,\n" +
                            "	CASE\n" +
                            "	WHEN cliente = true THEN 'Sim' ELSE 'Não'\n" +
                            "	END AS 'desc_cliente',\n" +
                            "	CASE\n" +
                            "	WHEN fornecedor = true THEN 'Sim' ELSE 'Não'\n" +
                            "	END AS 'desc_fornecedor',\n" +
                            "	CASE\n" +
                            "	WHEN funcionario = true THEN 'Sim' ELSE 'Não'\n" +
                            "	END AS 'desc_funcionario',\n" +
                            "	CASE\n" +
                            "	WHEN tipo = true THEN 'Juridica' ELSE 'Fisica'\n" +
                            "	END AS 'desc_tipo'\n" +
                            "FROM pessoas");
        
        
        initComponents();
        
        qryPesPessoa.execQuery();
        
        tbPessoas.setFieldsTitle("doc_principal", "Doc. Principal");
        tbPessoas.setFieldsTitle("nome", "Nome");
        tbPessoas.setFieldsTitle("fantasia", "Fantasia");
        tbPessoas.setFieldsTitle("desc_cliente", "Cliente");
        tbPessoas.setFieldsTitle("desc_fornecedor", "Fornecedor");
        tbPessoas.setFieldsTitle("desc_funcionario", "Funcionário");
        tbPessoas.setFieldsTitle("desc_tipo", "Tipo");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rdgTipo = new lib.jdb.control.jdbradiobutton.JDBRadioGroup();
        Painel = new javax.swing.JPanel();
        btnPesquisa = new javax.swing.JButton();
        scrlPessoas = new javax.swing.JScrollPane();
        tbPessoas = new lib.jdb.control.jdbtable.JDBTable();
        txtPesquisa = new javax.swing.JTextField();
        cbbPesquisa = new javax.swing.JComboBox<>();
        lblQuantidadeItens = new javax.swing.JLabel();
        jDBLabelCount1 = new lib.jdb.control.jdblabelcount.JDBLabelCount();
        pnTipoPessoa = new javax.swing.JPanel();
        cbxCliente = new lib.jdb.control.jdbcheckbox.JDBCheckBox();
        cbxFornecedor = new lib.jdb.control.jdbcheckbox.JDBCheckBox();
        cbxFuncionario = new lib.jdb.control.jdbcheckbox.JDBCheckBox();
        pnTipoFornecedor = new javax.swing.JPanel();
        rdFis = new lib.jdb.control.jdbradiobutton.JDBRadioButton();
        rdJud = new lib.jdb.control.jdbradiobutton.JDBRadioButton();

        rdgTipo.addJDBRadioButton(rdFis);
        rdgTipo.addJDBRadioButton(rdJud);

        setClosable(true);
        setIconifiable(true);
        setTitle("Pesquisa de Pessoas");
        setPreferredSize(new java.awt.Dimension(600, 418));

        Painel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, new java.awt.Color(204, 204, 204), new java.awt.Color(153, 153, 153)), "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial", 1, 12), new java.awt.Color(102, 102, 102))); // NOI18N

        btnPesquisa.setFont(principal.FrmLogin.fontePadrao);
        btnPesquisa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/look.png"))); // NOI18N
        btnPesquisa.setText("Pesquisar");
        btnPesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisaActionPerformed(evt);
            }
        });

        scrlPessoas.setFont(principal.FrmLogin.fontePadrao);

        tbPessoas.setJDBQuery(qryPesPessoa);
        tbPessoas.setEditable(false);
        tbPessoas.setFont(principal.FrmLogin.fontePadrao);
        tbPessoas.setInvisibleFields("data_nascimento data_inclusao data_modificacao doc_secundario estado_civil cep_cidade_natal cliente fornecedor funcionario tipo pessoa_autorizada ativo limite_credito");
        tbPessoas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbPessoasMouseClicked(evt);
            }
        });
        scrlPessoas.setViewportView(tbPessoas);

        txtPesquisa.setFont(principal.FrmLogin.fontePadrao);
        txtPesquisa.setToolTipText("");
        txtPesquisa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPesquisaKeyPressed(evt);
            }
        });

        cbbPesquisa.setFont(principal.FrmLogin.fontePadrao);
        cbbPesquisa.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nome", "Doc. Principal", "Fantasia" }));

        lblQuantidadeItens.setFont(principal.FrmLogin.fontePadrao);
        lblQuantidadeItens.setText("Quantidade de itens:");

        jDBLabelCount1.setFont(principal.FrmLogin.fontePadrao);
        jDBLabelCount1.setText("jDBLabelCount1");

        pnTipoPessoa.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, new java.awt.Color(204, 204, 204), new java.awt.Color(153, 153, 153)), "Classificação", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial", 1, 12), new java.awt.Color(102, 102, 102))); // NOI18N

        cbxCliente.setFont(principal.FrmLogin.fontePadrao);
        cbxCliente.setText("Cliente");

        cbxFornecedor.setFont(principal.FrmLogin.fontePadrao);
        cbxFornecedor.setText("Fornecedor");

        cbxFuncionario.setFont(principal.FrmLogin.fontePadrao);
        cbxFuncionario.setText("Funcionário");

        javax.swing.GroupLayout pnTipoPessoaLayout = new javax.swing.GroupLayout(pnTipoPessoa);
        pnTipoPessoa.setLayout(pnTipoPessoaLayout);
        pnTipoPessoaLayout.setHorizontalGroup(
            pnTipoPessoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnTipoPessoaLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cbxCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cbxFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cbxFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnTipoPessoaLayout.setVerticalGroup(
            pnTipoPessoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnTipoPessoaLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(pnTipoPessoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbxCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbxFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbxFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5))
        );

        pnTipoFornecedor.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, new java.awt.Color(204, 204, 204), new java.awt.Color(153, 153, 153)), "Tipo", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial", 1, 12), new java.awt.Color(102, 102, 102))); // NOI18N

        rdFis.setFont(principal.FrmLogin.fontePadrao);
        rdFis.setText("Física");

        rdJud.setFont(principal.FrmLogin.fontePadrao);
        rdJud.setNextFocusableComponent(txtPesquisa);
        rdJud.setText("Jurídica");

        javax.swing.GroupLayout pnTipoFornecedorLayout = new javax.swing.GroupLayout(pnTipoFornecedor);
        pnTipoFornecedor.setLayout(pnTipoFornecedorLayout);
        pnTipoFornecedorLayout.setHorizontalGroup(
            pnTipoFornecedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnTipoFornecedorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rdFis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(rdJud, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnTipoFornecedorLayout.setVerticalGroup(
            pnTipoFornecedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnTipoFornecedorLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(pnTipoFornecedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdFis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rdJud, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5))
        );

        javax.swing.GroupLayout PainelLayout = new javax.swing.GroupLayout(Painel);
        Painel.setLayout(PainelLayout);
        PainelLayout.setHorizontalGroup(
            PainelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PainelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrlPessoas)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PainelLayout.createSequentialGroup()
                        .addComponent(txtPesquisa)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbbPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnPesquisa))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PainelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(lblQuantidadeItens)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jDBLabelCount1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PainelLayout.createSequentialGroup()
                        .addComponent(pnTipoPessoa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(pnTipoFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 12, Short.MAX_VALUE)))
                .addContainerGap())
        );
        PainelLayout.setVerticalGroup(
            PainelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PainelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPesquisa)
                    .addComponent(txtPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbbPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PainelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnTipoPessoa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnTipoFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(scrlPessoas, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PainelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblQuantidadeItens)
                    .addComponent(jDBLabelCount1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10))
        );

        pnTipoPessoa.getAccessibleContext().setAccessibleName("classificacao");
        pnTipoFornecedor.getAccessibleContext().setAccessibleName("tipo");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(Painel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(10, 10, 10))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(Painel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(15, 15, 15))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnPesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisaActionPerformed
        
        String sql = "SELECT "
                            + "doc_principal, "
                            + "doc_secundario, "
                            + "tipo, "
                            + "cliente, "
                            + "fornecedor, "
                            + "funcionario, "
                            + "nome, "
                            + "fantasia, "
                            + "estado_civil, "
                            + "pessoa_autorizada, "
                            + "data_nascimento, "
                            + "limite_credito, "
                            + "cep_cidade_natal, "
                            + "ativo, "
                            + "data_inclusao, "
                            + "data_modificacao,\n" +
                            "	CASE\n" +
                            "	WHEN cliente = true THEN 'Sim' ELSE 'Não'\n" +
                            "	END AS 'desc_cliente',\n" +
                            "	CASE\n" +
                            "	WHEN fornecedor = true THEN 'Sim' ELSE 'Não'\n" +
                            "	END AS 'desc_fornecedor',\n" +
                            "	CASE\n" +
                            "	WHEN funcionario = true THEN 'Sim' ELSE 'Não'\n" +
                            "	END AS 'desc_funcionario',\n" +
                            "	CASE\n" +
                            "	WHEN tipo = true THEN 'Juridica' ELSE 'Fisica'\n" +
                            "	END AS 'desc_tipo'\n" +
                            "FROM pessoas";
        
        if(cbbPesquisa.getSelectedItem() == "Nome"){
            
            sql = "SELECT "
                            + "doc_principal, "
                            + "doc_secundario, "
                            + "tipo, "
                            + "cliente, "
                            + "fornecedor, "
                            + "funcionario, "
                            + "nome, "
                            + "fantasia, "
                            + "estado_civil, "
                            + "pessoa_autorizada, "
                            + "data_nascimento, "
                            + "limite_credito, "
                            + "cep_cidade_natal, "
                            + "ativo, "
                            + "data_inclusao, "
                            + "data_modificacao,\n" +
                            "	CASE\n" +
                            "	WHEN cliente = true THEN 'Sim' ELSE 'Não'\n" +
                            "	END AS 'desc_cliente',\n" +
                            "	CASE\n" +
                            "	WHEN fornecedor = true THEN 'Sim' ELSE 'Não'\n" +
                            "	END AS 'desc_fornecedor',\n" +
                            "	CASE\n" +
                            "	WHEN funcionario = true THEN 'Sim' ELSE 'Não'\n" +
                            "	END AS 'desc_funcionario',\n" +
                            "	CASE\n" +
                            "	WHEN tipo = true THEN 'Juridica' ELSE 'Fisica'\n" +
                            "	END AS 'desc_tipo'\n" +
                            "FROM pessoas "
            + "WHERE nome LIKE '%"+txtPesquisa.getText()+"%'";
            
        }else if(cbbPesquisa.getSelectedItem() == "Doc. Principal"){
            
            sql = "SELECT "
                            + "doc_principal, "
                            + "doc_secundario, "
                            + "tipo, "
                            + "cliente, "
                            + "fornecedor, "
                            + "funcionario, "
                            + "nome, "
                            + "fantasia, "
                            + "estado_civil, "
                            + "pessoa_autorizada, "
                            + "data_nascimento, "
                            + "limite_credito, "
                            + "cep_cidade_natal, "
                            + "ativo, "
                            + "data_inclusao, "
                            + "data_modificacao,\n" +
                            "	CASE\n" +
                            "	WHEN cliente = true THEN 'Sim' ELSE 'Não'\n" +
                            "	END AS 'desc_cliente',\n" +
                            "	CASE\n" +
                            "	WHEN fornecedor = true THEN 'Sim' ELSE 'Não'\n" +
                            "	END AS 'desc_fornecedor',\n" +
                            "	CASE\n" +
                            "	WHEN funcionario = true THEN 'Sim' ELSE 'Não'\n" +
                            "	END AS 'desc_funcionario',\n" +
                            "	CASE\n" +
                            "	WHEN tipo = true THEN 'Juridica' ELSE 'Fisica'\n" +
                            "	END AS 'desc_tipo'\n" +
                            "FROM pessoas "
            + "WHERE doc_principal LIKE '%"+txtPesquisa.getText()+"%'";
            
        }else if(cbbPesquisa.getSelectedItem() == "Fantasia"){
            
            sql = "SELECT "
                            + "doc_principal, "
                            + "doc_secundario, "
                            + "tipo, "
                            + "cliente, "
                            + "fornecedor, "
                            + "funcionario, "
                            + "nome, "
                            + "fantasia, "
                            + "estado_civil, "
                            + "pessoa_autorizada, "
                            + "data_nascimento, "
                            + "limite_credito, "
                            + "cep_cidade_natal, "
                            + "ativo, "
                            + "data_inclusao, "
                            + "data_modificacao,\n" +
                            "	CASE\n" +
                            "	WHEN cliente = true THEN 'Sim' ELSE 'Não'\n" +
                            "	END AS 'desc_cliente',\n" +
                            "	CASE\n" +
                            "	WHEN fornecedor = true THEN 'Sim' ELSE 'Não'\n" +
                            "	END AS 'desc_fornecedor',\n" +
                            "	CASE\n" +
                            "	WHEN funcionario = true THEN 'Sim' ELSE 'Não'\n" +
                            "	END AS 'desc_funcionario',\n" +
                            "	CASE\n" +
                            "	WHEN tipo = true THEN 'Juridica' ELSE 'Fisica'\n" +
                            "	END AS 'desc_tipo'\n" +
                            "FROM pessoas "
            + "WHERE fantasia LIKE '%"+txtPesquisa.getText()+"%'";
            
        }
        
        if (cbxCliente.isSelected()){
            
            sql += " AND cliente = '1'";
            
        }
        
        if (cbxFornecedor.isSelected()){
            
            sql += " AND fornecedor = '1'";
            
        }
        
        if (cbxFuncionario.isSelected()){
            
            sql += " AND funcionario = '1'";
            
        }
        
        if (rdFis.isSelected()){
            
            sql += " AND tipo = '0'";
            
        }else if (rdJud.isSelected()){
            
            sql += " AND tipo = '1'";
            
        }
        
        qryPesPessoa.setSQL(sql);
        qryPesPessoa.execQuery();
        
    }//GEN-LAST:event_btnPesquisaActionPerformed

    private void tbPessoasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbPessoasMouseClicked
        
        if(evt.getClickCount() == 2){
            // criado método para carregar pesquisa, substituindo código anteriormente alocado aqui.
            carregarPesquisaSelecionada();
        }
        
    }//GEN-LAST:event_tbPessoasMouseClicked

    private void txtPesquisaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPesquisaKeyPressed
        if(evt.getKeyChar() == '\n'){
            
            String sql = "SELECT "
                                + "doc_principal, "
                                + "doc_secundario, "
                                + "tipo, "
                                + "cliente, "
                                + "fornecedor, "
                                + "funcionario, "
                                + "nome, "
                                + "fantasia, "
                                + "estado_civil, "
                                + "pessoa_autorizada, "
                                + "data_nascimento, "
                                + "limite_credito, "
                                + "cep_cidade_natal, "
                                + "ativo, "
                                + "data_inclusao, "
                                + "data_modificacao,\n" +
                                "	CASE\n" +
                                "	WHEN cliente = true THEN 'Sim' ELSE 'Não'\n" +
                                "	END AS 'desc_cliente',\n" +
                                "	CASE\n" +
                                "	WHEN fornecedor = true THEN 'Sim' ELSE 'Não'\n" +
                                "	END AS 'desc_fornecedor',\n" +
                                "	CASE\n" +
                                "	WHEN funcionario = true THEN 'Sim' ELSE 'Não'\n" +
                                "	END AS 'desc_funcionario',\n" +
                                "	CASE\n" +
                                "	WHEN tipo = true THEN 'Fisica' ELSE 'Juridica'\n" +
                                "	END AS 'desc_tipo'\n" +
                                "FROM pessoas";

            if(cbbPesquisa.getSelectedItem() == "Nome"){

                sql = "SELECT "
                                + "doc_principal, "
                                + "doc_secundario, "
                                + "tipo, "
                                + "cliente, "
                                + "fornecedor, "
                                + "funcionario, "
                                + "nome, "
                                + "fantasia, "
                                + "estado_civil, "
                                + "pessoa_autorizada, "
                                + "data_nascimento, "
                                + "limite_credito, "
                                + "cep_cidade_natal, "
                                + "ativo, "
                                + "data_inclusao, "
                                + "data_modificacao,\n" +
                                "	CASE\n" +
                                "	WHEN cliente = true THEN 'Sim' ELSE 'Não'\n" +
                                "	END AS 'desc_cliente',\n" +
                                "	CASE\n" +
                                "	WHEN fornecedor = true THEN 'Sim' ELSE 'Não'\n" +
                                "	END AS 'desc_fornecedor',\n" +
                                "	CASE\n" +
                                "	WHEN funcionario = true THEN 'Sim' ELSE 'Não'\n" +
                                "	END AS 'desc_funcionario',\n" +
                                "	CASE\n" +
                                "	WHEN tipo = true THEN 'Fisica' ELSE 'Juridica'\n" +
                                "	END AS 'desc_tipo'\n" +
                                "FROM pessoas "
                + "WHERE nome LIKE '%"+txtPesquisa.getText()+"%'";

            }else if(cbbPesquisa.getSelectedItem() == "Doc. Principal"){

                sql = "SELECT "
                                + "doc_principal, "
                                + "doc_secundario, "
                                + "tipo, "
                                + "cliente, "
                                + "fornecedor, "
                                + "funcionario, "
                                + "nome, "
                                + "fantasia, "
                                + "estado_civil, "
                                + "pessoa_autorizada, "
                                + "data_nascimento, "
                                + "limite_credito, "
                                + "cep_cidade_natal, "
                                + "ativo, "
                                + "data_inclusao, "
                                + "data_modificacao,\n" +
                                "	CASE\n" +
                                "	WHEN cliente = true THEN 'Sim' ELSE 'Não'\n" +
                                "	END AS 'desc_cliente',\n" +
                                "	CASE\n" +
                                "	WHEN fornecedor = true THEN 'Sim' ELSE 'Não'\n" +
                                "	END AS 'desc_fornecedor',\n" +
                                "	CASE\n" +
                                "	WHEN funcionario = true THEN 'Sim' ELSE 'Não'\n" +
                                "	END AS 'desc_funcionario',\n" +
                                "	CASE\n" +
                                "	WHEN tipo = true THEN 'Fisica' ELSE 'Juridica'\n" +
                                "	END AS 'desc_tipo'\n" +
                                "FROM pessoas "
                + "WHERE doc_principal LIKE '%"+txtPesquisa.getText()+"%'";

            }else if(cbbPesquisa.getSelectedItem() == "Fantasia"){

                sql = "SELECT "
                                + "doc_principal, "
                                + "doc_secundario, "
                                + "tipo, "
                                + "cliente, "
                                + "fornecedor, "
                                + "funcionario, "
                                + "nome, "
                                + "fantasia, "
                                + "estado_civil, "
                                + "pessoa_autorizada, "
                                + "data_nascimento, "
                                + "limite_credito, "
                                + "cep_cidade_natal, "
                                + "ativo, "
                                + "data_inclusao, "
                                + "data_modificacao,\n" +
                                "	CASE\n" +
                                "	WHEN cliente = true THEN 'Sim' ELSE 'Não'\n" +
                                "	END AS 'desc_cliente',\n" +
                                "	CASE\n" +
                                "	WHEN fornecedor = true THEN 'Sim' ELSE 'Não'\n" +
                                "	END AS 'desc_fornecedor',\n" +
                                "	CASE\n" +
                                "	WHEN funcionario = true THEN 'Sim' ELSE 'Não'\n" +
                                "	END AS 'desc_funcionario',\n" +
                                "	CASE\n" +
                                "	WHEN tipo = true THEN 'Fisica' ELSE 'Juridica'\n" +
                                "	END AS 'desc_tipo'\n" +
                                "FROM pessoas "
                + "WHERE fantasia LIKE '%"+txtPesquisa.getText()+"%'";

            }

            if (cbxCliente.isSelected()){

                sql += " AND cliente = '1'";

            }

            if (cbxFornecedor.isSelected()){

                sql += " AND fornecedor = '1'";

            }

            if (cbxFuncionario.isSelected()){

                sql += " AND funcionario = '1'";

            }

            if (rdFis.isSelected()){

                sql += " AND tipo = '1'";

            }else if (rdJud.isSelected()){

                sql += " AND tipo = '0'";

            }

            qryPesPessoa.setSQL(sql);
            qryPesPessoa.execQuery();
            
        }
    }//GEN-LAST:event_txtPesquisaKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Painel;
    private javax.swing.JButton btnPesquisa;
    private javax.swing.JComboBox<String> cbbPesquisa;
    private lib.jdb.control.jdbcheckbox.JDBCheckBox cbxCliente;
    private lib.jdb.control.jdbcheckbox.JDBCheckBox cbxFornecedor;
    private lib.jdb.control.jdbcheckbox.JDBCheckBox cbxFuncionario;
    private lib.jdb.control.jdblabelcount.JDBLabelCount jDBLabelCount1;
    private javax.swing.JLabel lblQuantidadeItens;
    private javax.swing.JPanel pnTipoFornecedor;
    private javax.swing.JPanel pnTipoPessoa;
    private lib.jdb.control.jdbradiobutton.JDBRadioButton rdFis;
    private lib.jdb.control.jdbradiobutton.JDBRadioButton rdJud;
    private lib.jdb.control.jdbradiobutton.JDBRadioGroup rdgTipo;
    private javax.swing.JScrollPane scrlPessoas;
    private lib.jdb.control.jdbtable.JDBTable tbPessoas;
    private javax.swing.JTextField txtPesquisa;
    // End of variables declaration//GEN-END:variables
    
    private void carregarPesquisaSelecionada(){
        
        qryAtribuiPes.setSQL(String.format(
                "SELECT "
                    + "doc_principal, "
                    + "doc_secundario, "
                    + "tipo, "
                    + "cliente, "
                    + "fornecedor, "
                    + "funcionario, "
                    + "nome, "
                    + "fantasia, "
                    + "estado_civil, "
                    + "pessoa_autorizada, "
                    + "data_nascimento, "
                    + "limite_credito, "
                    + "cep_cidade_natal, "
                    + "ativo, "
                    + "data_inclusao, "
                    + "data_modificacao "
                + "FROM pessoas "
                + "WHERE doc_principal='%s'",
                qryPesPessoa.getCurrentFieldValueAsString("doc_principal")));
        
        qryAtribuiPes.execQuery();
        
        formPes.atribuirCampos();
        doDefaultCloseAction();
        
    }

}
    
    
