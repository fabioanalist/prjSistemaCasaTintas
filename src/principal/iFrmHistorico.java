/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package principal;

import java.util.LinkedHashMap;
import lib.jdb.control.jdbtable.JDBTable;
import lib.jdb.jdbquery.JDBQuery;

/**
 *
 * @author paulo
 */
public class iFrmHistorico extends javax.swing.JInternalFrame {
    private JDBQuery qryHistorico;
    private JDBQuery qryUsuario;
    private String nomeUsuario, tipoUsuario;
    
    /** Creates new form iFrmHistorico */
    public iFrmHistorico() {
        qryHistorico = new JDBQuery();
        qryHistorico.setJDBConnection(principal.Principal.conexao.getConexao());
        qryHistorico.setLanguage("pt");
        qryHistorico.setTimeStampFormat("dd/MM/yyyy HH:mm:ss");
        qryHistorico.setConcurUpdatable(false);
        
        qryUsuario = new JDBQuery();
        qryUsuario.setJDBConnection(principal.Principal.conexao.getConexao());
        qryUsuario.setConcurUpdatable(false);
        
        initComponents();
        
        lblContador.setjDBQuery(qryHistorico);
        
        tblHistorico.setJDBQuery(qryHistorico);
        tblHistorico.setFieldsTitle("id", "CÓDIGO");
        tblHistorico.setFieldsTitle("data", "DATA");
        tblHistorico.setFieldsTitle("descricao_tarefa", "TAREFA");
        tblHistorico.setFieldsTitle("codigo", "CÓD. TAREFA");
        tblHistorico.setFieldsTitle("descricao_historico", "HISTÓRICO");
        tblHistorico.setInvisibleFields("nome_usuario id_tarefa");
        tblHistorico.setAutoResizeMode(JDBTable.AUTO_RESIZE_OFF);
        tblHistorico.setFieldsWidth("id", 100);
        tblHistorico.setFieldsWidth("data", 150);
        tblHistorico.setFieldsWidth("descricao_tarefa", 200);
        tblHistorico.setFieldsWidth("codigo", 100);
        tblHistorico.setFieldsWidth("descricao_historico", 300);
        
        nomeUsuario = FrmLogin.usuario.getNomeUsuario();
        tipoUsuario = FrmLogin.usuario.getDescricaoTipoUsuario();
        carregarQry(nomeUsuario, tipoUsuario);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblHistorico = new lib.jdb.control.jdbtable.JDBTable();
        txtUsuario = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btnConsultar = new javax.swing.JButton();
        lblQuantidadeItens = new javax.swing.JLabel();
        lblContador = new lib.jdb.control.jdblabelcount.JDBLabelCount();
        cbxQuantRegistro = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        txtTipo = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setTitle("Histórico");

        tblHistorico.setEditable(false);
        jScrollPane1.setViewportView(tblHistorico);

        txtUsuario.setEditable(false);
        txtUsuario.setFocusable(false);

        jLabel1.setText("Usuário");

        btnConsultar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/look.png"))); // NOI18N
        btnConsultar.setText("Consultar");
        btnConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarActionPerformed(evt);
            }
        });

        lblQuantidadeItens.setFont(principal.FrmLogin.fontePadrao);
        lblQuantidadeItens.setText("Quantidade de itens:");

        lblContador.setFont(principal.FrmLogin.fontePadrao);
        lblContador.setText("jDBLabelCount1");

        cbxQuantRegistro.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "25", "50", "100", "500", "Todos" }));
        cbxQuantRegistro.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                cbxQuantRegistroPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        jLabel2.setText("Quantidade de registros");

        txtTipo.setEditable(false);
        txtTipo.setFocusable(false);

        jLabel3.setText("Tipo");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(lblQuantidadeItens)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblContador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, 296, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnConsultar))
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbxQuantRegistro, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnConsultar)
                    .addComponent(cbxQuantRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblQuantidadeItens)
                    .addComponent(lblContador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarActionPerformed
        if(FrmLogin.usuario.verificarPermissao(this, "historicoGeral", 0)){
        
            // campos para combobox sendo texto visual e o nome campo do banco referente.
            LinkedHashMap<String, String> combo = new LinkedHashMap<>();
            combo.put("Usuário", "nome_usuario");
            combo.put("Pessoa","nome_pessoa");

            // titulos para as colunas da tabela, sendo texto visual e nome campo do banco referente.
            LinkedHashMap<String, String> titulo = new LinkedHashMap<>();
            titulo.put("USUÁRIO", "nome_usuario");
            titulo.put("PESSOA", "nome_pessoa");
            titulo.put("ADMINISTRADOR", "administrador");
            titulo.put("TIPO", "desc_tipo");
            titulo.put("ATIVO", "ativo");

            // campos que deseja deixar invisível, pode-se omitir.
            String[] invisivel = null;

            // tamanho das colunas visíveis, pode-se omitir.
            //        int[] tamanho = {200, 400};

            pesquisa.iFrmPesquisa usuario;
            usuario = new pesquisa.iFrmPesquisa(this,
                "Pesquisa de Cliente",
                principal.Principal.conexao.getConexao(),
                qryUsuario,
                "nome_usuario",
                combo,
                titulo,
                "SELECT nome_usuario, nome_pessoa, administrador, desc_tipo, ativo "
                + "FROM vw_usuarios_pesquisa_historico",
                invisivel,
                null);

            principal.FrmPrincipal.Desktop.add(usuario);
            usuario.setVisible(true);
        }
    }//GEN-LAST:event_btnConsultarActionPerformed

    private void cbxQuantRegistroPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cbxQuantRegistroPopupMenuWillBecomeInvisible
        carregarQry(nomeUsuario, tipoUsuario);
    }//GEN-LAST:event_cbxQuantRegistroPopupMenuWillBecomeInvisible


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConsultar;
    private javax.swing.JComboBox cbxQuantRegistro;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private lib.jdb.control.jdblabelcount.JDBLabelCount lblContador;
    private javax.swing.JLabel lblQuantidadeItens;
    private lib.jdb.control.jdbtable.JDBTable tblHistorico;
    private javax.swing.JTextField txtTipo;
    private javax.swing.JTextField txtUsuario;
    // End of variables declaration//GEN-END:variables

    
    
    private void carregarQry(String nomeUsuario, String tipoUsuario){
        String quantRegistro;
        
        txtUsuario.setText(nomeUsuario);
        txtTipo.setText(tipoUsuario);
        
        quantRegistro = cbxQuantRegistro.getSelectedIndex()== 
                (cbxQuantRegistro.getItemCount() - 1)?"":"LIMIT " + cbxQuantRegistro.getSelectedItem();
                
        qryHistorico.setSQL(String.format(
                "SELECT "
                    + "id, "
                    + "nome_usuario, "
                    + "data, "
                    + "id_tarefa, "
                    + "descricao_tarefa, "
                    + "codigo, "
                    + "descricao_historico "
                + "FROM "
                    + "vw_historico "
                + "WHERE "
                    + "nome_usuario = '%s' "
                + "ORDER BY data DESC "
                + "%s ",
                nomeUsuario,
                quantRegistro));
        qryHistorico.execQuery();
    }
    
    public void atribuirCampos(){
        nomeUsuario = qryUsuario.getCurrentFieldValueAsString("nome_usuario");
        txtUsuario.setText(nomeUsuario);
        tipoUsuario = qryUsuario.getCurrentFieldValueAsString("desc_tipo");
        txtTipo.setText(tipoUsuario);
        
        carregarQry(nomeUsuario, tipoUsuario);
        
        // registro de log
        FrmLogin.log.gravar(
                FrmLogin.usuario.getNomeUsuario(), "historicoGeral", nomeUsuario, 0);
    }
}
