package principal;

import java.awt.*;
import java.awt.Image;
import java.awt.Graphics;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author patri
 */
public class FrmPrincipal extends javax.swing.JFrame {
    private JFrame login;
    /**
     * Creates new form FrmPrincipal
     */
    public FrmPrincipal(JFrame login) {
        this.login = login;
        
        initComponents();
        
        //impedindo que a janela seja fechada
        this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ImageIcon icon = new ImageIcon(getClass().getResource("/background/wpp_1260x720.png"));
        Image image = icon.getImage();
        Desktop = new javax.swing.JDesktopPane(){
            public void paintComponent(Graphics g){
                g.drawImage(image, 0, 0, getWidth(), getHeight(), this);
            }
        };
        BarraFerramenta = new javax.swing.JToolBar();
        btnPessoa = new javax.swing.JButton();
        btnVenda = new javax.swing.JButton();
        btnCompra = new javax.swing.JButton();
        btnTinta = new javax.swing.JButton();
        btnPaga = new javax.swing.JButton();
        btnRecebe = new javax.swing.JButton();
        btnCaixa = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        btnTrocarUsuario = new javax.swing.JButton();
        btnDesconecta = new javax.swing.JButton();
        Menu = new javax.swing.JMenuBar();
        mnUsuario = new javax.swing.JMenu();
        usUsuarios = new javax.swing.JMenuItem();
        usTipoUsuarios = new javax.swing.JMenuItem();
        usPermTipoUsuario = new javax.swing.JMenuItem();
        usHistorico = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        usTrocaUsuario = new javax.swing.JMenuItem();
        usDesconectar = new javax.swing.JMenuItem();
        mnCadastrar = new javax.swing.JMenu();
        cadPessoas = new javax.swing.JMenuItem();
        cadProdutos = new javax.swing.JMenuItem();
        cadCatProduto = new javax.swing.JMenuItem();
        cadUnidades = new javax.swing.JMenuItem();
        cadMarcas = new javax.swing.JMenuItem();
        cadTintas = new javax.swing.JMenuItem();
        cadCatTinta = new javax.swing.JMenuItem();
        cadTipoTinta = new javax.swing.JMenuItem();
        cadMontadoras = new javax.swing.JMenuItem();
        mnEstoque = new javax.swing.JMenu();
        esVenda = new javax.swing.JMenuItem();
        esCompra = new javax.swing.JMenuItem();
        esProdTinta = new javax.swing.JMenuItem();
        esPromocao = new javax.swing.JMenuItem();
        mnFinanceiro = new javax.swing.JMenu();
        finCaixa = new javax.swing.JMenuItem();
        finContaRecebe = new javax.swing.JMenuItem();
        finContaPaga = new javax.swing.JMenuItem();
        finDespesas = new javax.swing.JMenuItem();
        finChequeCartao = new javax.swing.JMenuItem();
        finFormaPaga = new javax.swing.JMenuItem();
        mnRelatórios = new javax.swing.JMenu();
        rePessoa = new javax.swing.JMenuItem();
        reClientesGeral = new javax.swing.JMenuItem();
        reFornecedoresGeral = new javax.swing.JMenuItem();
        reFuncionariosGeral = new javax.swing.JMenuItem();
        reComissao = new javax.swing.JMenuItem();
        reContasReceber = new javax.swing.JMenuItem();
        reContasPagar = new javax.swing.JMenuItem();
        reControleChequeCartao = new javax.swing.JMenuItem();
        reDespesas = new javax.swing.JMenuItem();
        reProducaoTinta = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        reVendasTotais = new javax.swing.JMenuItem();
        reCompra = new javax.swing.JMenuItem();
        reComprasTotais = new javax.swing.JMenuItem();
        reClientesMaisCompras = new javax.swing.JMenuItem();
        reProdutosVendidos = new javax.swing.JMenuItem();
        smProdutos = new javax.swing.JMenu();
        reSimples = new javax.swing.JMenuItem();
        reCompleto = new javax.swing.JMenuItem();
        rePromocoes = new javax.swing.JMenuItem();
        reCaixa = new javax.swing.JMenuItem();
        reHistorico = new javax.swing.JMenuItem();
        reUsuarios = new javax.swing.JMenuItem();
        mnFerramentas = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        usConfiguracoes = new javax.swing.JMenuItem();
        usBackup = new javax.swing.JMenuItem();
        usSobre = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Loja de Tintas - OrionS");
        setExtendedState(6);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        Desktop.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        javax.swing.GroupLayout DesktopLayout = new javax.swing.GroupLayout(Desktop);
        Desktop.setLayout(DesktopLayout);
        DesktopLayout.setHorizontalGroup(
            DesktopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 596, Short.MAX_VALUE)
        );
        DesktopLayout.setVerticalGroup(
            DesktopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 749, Short.MAX_VALUE)
        );

        BarraFerramenta.setFloatable(false);
        BarraFerramenta.setOrientation(javax.swing.SwingConstants.VERTICAL);

        btnPessoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons_toolbar/client.png"))); // NOI18N
        btnPessoa.setToolTipText("Cliente");
        btnPessoa.setFocusable(false);
        btnPessoa.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnPessoa.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnPessoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPessoaActionPerformed(evt);
            }
        });
        BarraFerramenta.add(btnPessoa);

        btnVenda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons_toolbar/sell.png"))); // NOI18N
        btnVenda.setToolTipText("Venda");
        btnVenda.setFocusable(false);
        btnVenda.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnVenda.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVendaActionPerformed(evt);
            }
        });
        BarraFerramenta.add(btnVenda);

        btnCompra.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons_toolbar/buy.png"))); // NOI18N
        btnCompra.setToolTipText("Compra");
        btnCompra.setFocusable(false);
        btnCompra.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnCompra.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCompraActionPerformed(evt);
            }
        });
        BarraFerramenta.add(btnCompra);

        btnTinta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons_toolbar/ink_production2.png"))); // NOI18N
        btnTinta.setToolTipText("Produção de tinta");
        btnTinta.setFocusable(false);
        btnTinta.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnTinta.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnTinta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTintaActionPerformed(evt);
            }
        });
        BarraFerramenta.add(btnTinta);

        btnPaga.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons_toolbar/card_in_use.png"))); // NOI18N
        btnPaga.setToolTipText("Contas a pagar");
        btnPaga.setFocusable(false);
        btnPaga.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnPaga.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnPaga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPagaActionPerformed(evt);
            }
        });
        BarraFerramenta.add(btnPaga);

        btnRecebe.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons_toolbar/money receive.png"))); // NOI18N
        btnRecebe.setToolTipText("Contas a receber");
        btnRecebe.setFocusable(false);
        btnRecebe.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnRecebe.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnRecebe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRecebeActionPerformed(evt);
            }
        });
        BarraFerramenta.add(btnRecebe);

        btnCaixa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons_toolbar/money_bag.png"))); // NOI18N
        btnCaixa.setToolTipText("Caixa");
        btnCaixa.setFocusable(false);
        btnCaixa.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnCaixa.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnCaixa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCaixaActionPerformed(evt);
            }
        });
        BarraFerramenta.add(btnCaixa);
        BarraFerramenta.add(jSeparator2);

        btnTrocarUsuario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons_toolbar/account_box.png"))); // NOI18N
        btnTrocarUsuario.setToolTipText("Trocar de usuário");
        btnTrocarUsuario.setFocusable(false);
        btnTrocarUsuario.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnTrocarUsuario.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnTrocarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTrocarUsuarioActionPerformed(evt);
            }
        });
        BarraFerramenta.add(btnTrocarUsuario);

        btnDesconecta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons_toolbar/logoff.png"))); // NOI18N
        btnDesconecta.setToolTipText("Desconectar");
        btnDesconecta.setFocusable(false);
        btnDesconecta.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnDesconecta.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnDesconecta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDesconectaActionPerformed(evt);
            }
        });
        BarraFerramenta.add(btnDesconecta);

        Menu.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Menu.setFont(FrmLogin.fontePadrao);

        mnUsuario.setMnemonic('u');
        mnUsuario.setText("Usuário");

        usUsuarios.setText("Cadastrar Usuário");
        usUsuarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usUsuariosActionPerformed(evt);
            }
        });
        mnUsuario.add(usUsuarios);

        usTipoUsuarios.setText("Tipos de Usuário");
        usTipoUsuarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usTipoUsuariosActionPerformed(evt);
            }
        });
        mnUsuario.add(usTipoUsuarios);

        usPermTipoUsuario.setText("Permissão ");
        usPermTipoUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usPermTipoUsuarioActionPerformed(evt);
            }
        });
        mnUsuario.add(usPermTipoUsuario);

        usHistorico.setText("Histórico");
        usHistorico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usHistoricoActionPerformed(evt);
            }
        });
        mnUsuario.add(usHistorico);
        mnUsuario.add(jSeparator1);

        usTrocaUsuario.setText("Trocar de Usuário");
        usTrocaUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usTrocaUsuarioActionPerformed(evt);
            }
        });
        mnUsuario.add(usTrocaUsuario);

        usDesconectar.setText("Desconectar");
        usDesconectar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usDesconectarActionPerformed(evt);
            }
        });
        mnUsuario.add(usDesconectar);

        Menu.add(mnUsuario);

        mnCadastrar.setMnemonic('c');
        mnCadastrar.setText("Cadastro");

        cadPessoas.setText("Pessoas");
        cadPessoas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadPessoasActionPerformed(evt);
            }
        });
        mnCadastrar.add(cadPessoas);

        cadProdutos.setText("Produtos");
        cadProdutos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadProdutosActionPerformed(evt);
            }
        });
        mnCadastrar.add(cadProdutos);

        cadCatProduto.setText("Categorias de Produto");
        cadCatProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadCatProdutoActionPerformed(evt);
            }
        });
        mnCadastrar.add(cadCatProduto);

        cadUnidades.setText("Unidades");
        cadUnidades.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadUnidadesActionPerformed(evt);
            }
        });
        mnCadastrar.add(cadUnidades);

        cadMarcas.setText("Marcas");
        cadMarcas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadMarcasActionPerformed(evt);
            }
        });
        mnCadastrar.add(cadMarcas);

        cadTintas.setText("Tintas");
        cadTintas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadTintasActionPerformed(evt);
            }
        });
        mnCadastrar.add(cadTintas);

        cadCatTinta.setText("Categorias de Tinta");
        cadCatTinta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadCatTintaActionPerformed(evt);
            }
        });
        mnCadastrar.add(cadCatTinta);

        cadTipoTinta.setText("Tipos de Tinta");
        cadTipoTinta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadTipoTintaActionPerformed(evt);
            }
        });
        mnCadastrar.add(cadTipoTinta);

        cadMontadoras.setText("Montadoras");
        cadMontadoras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadMontadorasActionPerformed(evt);
            }
        });
        mnCadastrar.add(cadMontadoras);

        Menu.add(mnCadastrar);

        mnEstoque.setMnemonic('e');
        mnEstoque.setText("Estoque");

        esVenda.setText("Venda");
        esVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                esVendaActionPerformed(evt);
            }
        });
        mnEstoque.add(esVenda);

        esCompra.setText("Compra");
        esCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                esCompraActionPerformed(evt);
            }
        });
        mnEstoque.add(esCompra);

        esProdTinta.setText("Produção de Tinta");
        esProdTinta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                esProdTintaActionPerformed(evt);
            }
        });
        mnEstoque.add(esProdTinta);

        esPromocao.setText("Promoções");
        esPromocao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                esPromocaoActionPerformed(evt);
            }
        });
        mnEstoque.add(esPromocao);

        Menu.add(mnEstoque);

        mnFinanceiro.setMnemonic('f');
        mnFinanceiro.setText("Financeiro");

        finCaixa.setText("Caixa");
        finCaixa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finCaixaActionPerformed(evt);
            }
        });
        mnFinanceiro.add(finCaixa);

        finContaRecebe.setText("Contas a Receber");
        finContaRecebe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finContaRecebeActionPerformed(evt);
            }
        });
        mnFinanceiro.add(finContaRecebe);

        finContaPaga.setText("Contas a Pagar");
        finContaPaga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finContaPagaActionPerformed(evt);
            }
        });
        mnFinanceiro.add(finContaPaga);

        finDespesas.setText("Despesas e movimento de caixa");
        finDespesas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finDespesasActionPerformed(evt);
            }
        });
        mnFinanceiro.add(finDespesas);

        finChequeCartao.setText("Controle de Cheque/Cartão");
        finChequeCartao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finChequeCartaoActionPerformed(evt);
            }
        });
        mnFinanceiro.add(finChequeCartao);

        finFormaPaga.setText("Formas de Pagamento");
        finFormaPaga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finFormaPagaActionPerformed(evt);
            }
        });
        mnFinanceiro.add(finFormaPaga);

        Menu.add(mnFinanceiro);

        mnRelatórios.setMnemonic('r');
        mnRelatórios.setText("Relatórios");

        rePessoa.setText("Pessoa");
        rePessoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rePessoaActionPerformed(evt);
            }
        });
        mnRelatórios.add(rePessoa);

        reClientesGeral.setText("Clientes geral");
        reClientesGeral.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reClientesGeralActionPerformed(evt);
            }
        });
        mnRelatórios.add(reClientesGeral);

        reFornecedoresGeral.setText("Fornecedores geral");
        reFornecedoresGeral.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reFornecedoresGeralActionPerformed(evt);
            }
        });
        mnRelatórios.add(reFornecedoresGeral);

        reFuncionariosGeral.setText("Funcionários geral");
        reFuncionariosGeral.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reFuncionariosGeralActionPerformed(evt);
            }
        });
        mnRelatórios.add(reFuncionariosGeral);

        reComissao.setText("Comissão");
        reComissao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reComissaoActionPerformed(evt);
            }
        });
        mnRelatórios.add(reComissao);

        reContasReceber.setText("Contas a receber");
        reContasReceber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reContasReceberActionPerformed(evt);
            }
        });
        mnRelatórios.add(reContasReceber);

        reContasPagar.setText("Contas a pagar");
        reContasPagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reContasPagarActionPerformed(evt);
            }
        });
        mnRelatórios.add(reContasPagar);

        reControleChequeCartao.setText("Controle de cheque e cartão");
        reControleChequeCartao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reControleChequeCartaoActionPerformed(evt);
            }
        });
        mnRelatórios.add(reControleChequeCartao);

        reDespesas.setText("Despesas e lançamentos de caixa");
        reDespesas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reDespesasActionPerformed(evt);
            }
        });
        mnRelatórios.add(reDespesas);

        reProducaoTinta.setText("Produção de tinta");
        reProducaoTinta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reProducaoTintaActionPerformed(evt);
            }
        });
        mnRelatórios.add(reProducaoTinta);

        jMenuItem5.setText("Venda");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        mnRelatórios.add(jMenuItem5);

        reVendasTotais.setText("Vendas totais");
        reVendasTotais.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reVendasTotaisActionPerformed(evt);
            }
        });
        mnRelatórios.add(reVendasTotais);

        reCompra.setText("Compra");
        reCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reCompraActionPerformed(evt);
            }
        });
        mnRelatórios.add(reCompra);

        reComprasTotais.setText("Compras totais");
        reComprasTotais.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reComprasTotaisActionPerformed(evt);
            }
        });
        mnRelatórios.add(reComprasTotais);

        reClientesMaisCompras.setText("Clientes que mais compraram");
        reClientesMaisCompras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reClientesMaisComprasActionPerformed(evt);
            }
        });
        mnRelatórios.add(reClientesMaisCompras);

        reProdutosVendidos.setText("Produtos vendidos");
        reProdutosVendidos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reProdutosVendidosActionPerformed(evt);
            }
        });
        mnRelatórios.add(reProdutosVendidos);

        smProdutos.setText("Produtos");

        reSimples.setText("Simples");
        reSimples.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reSimplesActionPerformed(evt);
            }
        });
        smProdutos.add(reSimples);

        reCompleto.setText("Completo");
        reCompleto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reCompletoActionPerformed(evt);
            }
        });
        smProdutos.add(reCompleto);

        mnRelatórios.add(smProdutos);

        rePromocoes.setText("Promoções");
        rePromocoes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rePromocoesActionPerformed(evt);
            }
        });
        mnRelatórios.add(rePromocoes);

        reCaixa.setText("Caixa");
        reCaixa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reCaixaActionPerformed(evt);
            }
        });
        mnRelatórios.add(reCaixa);

        reHistorico.setText("Histórico");
        reHistorico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reHistoricoActionPerformed(evt);
            }
        });
        mnRelatórios.add(reHistorico);

        reUsuarios.setText("Usuários");
        reUsuarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reUsuariosActionPerformed(evt);
            }
        });
        mnRelatórios.add(reUsuarios);

        Menu.add(mnRelatórios);

        mnFerramentas.setMnemonic('m');
        mnFerramentas.setText("Ferramentas");

        jMenuItem1.setText("Cancelamento de venda");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        mnFerramentas.add(jMenuItem1);

        usConfiguracoes.setText("Configurações");
        usConfiguracoes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usConfiguracoesActionPerformed(evt);
            }
        });
        mnFerramentas.add(usConfiguracoes);

        usBackup.setText("Backup");
        usBackup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usBackupActionPerformed(evt);
            }
        });
        mnFerramentas.add(usBackup);

        usSobre.setText("Sobre");
        usSobre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usSobreActionPerformed(evt);
            }
        });
        mnFerramentas.add(usSobre);

        Menu.add(mnFerramentas);

        setJMenuBar(Menu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(BarraFerramenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(Desktop))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Desktop)
            .addComponent(BarraFerramenta, javax.swing.GroupLayout.DEFAULT_SIZE, 749, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void usUsuariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usUsuariosActionPerformed
        if(FrmLogin.usuario.verificarPermissao(this, "iFrmCadUsuario", 0)){
            // registro de log
            FrmLogin.log.gravar(
                    FrmLogin.usuario.getNomeUsuario(), "iFrmCadUsuario", 0);
        
            pessoa.iFrmCadUsuario cadUsu = new pessoa.iFrmCadUsuario();
            Desktop.add(cadUsu);
            cadUsu.setVisible(true);
        }
    }//GEN-LAST:event_usUsuariosActionPerformed

    private void cadPessoasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadPessoasActionPerformed
        if(FrmLogin.usuario.verificarPermissao(this, "iFrmCadPessoa", 0)){
            // registro de log
            FrmLogin.log.gravar(
                    FrmLogin.usuario.getNomeUsuario(), "iFrmCadPessoa", 0);
        
            pessoa.iFrmCadPessoa cadPes = new pessoa.iFrmCadPessoa();
            Desktop.add(cadPes);
            cadPes.setVisible(true);
        }
    }//GEN-LAST:event_cadPessoasActionPerformed

    private void cadCatProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadCatProdutoActionPerformed
        if(FrmLogin.usuario.verificarPermissao(this, "iFrmCadCategoriaProd", 0)){
            // registro de log
            FrmLogin.log.gravar(
                    FrmLogin.usuario.getNomeUsuario(), "iFrmCadCategoriaProd", 0);
            
            estoque.iFrmCadCategoriaProd cadCatProd = new estoque.iFrmCadCategoriaProd();
            Desktop.add(cadCatProd);
            cadCatProd.setVisible(true);
        }
    }//GEN-LAST:event_cadCatProdutoActionPerformed

    private void cadCatTintaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadCatTintaActionPerformed
        if(FrmLogin.usuario.verificarPermissao(this, "iFrmCadCategoriaTinta", 0)){
            // registro de log
            FrmLogin.log.gravar(
                    FrmLogin.usuario.getNomeUsuario(), "iFrmCadCategoriaTinta", 0);
            
            estoque.iFrmCadCategoriaTinta cadCatTinta = new estoque.iFrmCadCategoriaTinta();
            Desktop.add(cadCatTinta);
            cadCatTinta.setVisible(true);
        }
    }//GEN-LAST:event_cadCatTintaActionPerformed

    private void cadUnidadesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadUnidadesActionPerformed
        if(FrmLogin.usuario.verificarPermissao(this, "iFrmCadUnidade", 0)){
            // registro de log
            FrmLogin.log.gravar(
                    FrmLogin.usuario.getNomeUsuario(), "iFrmCadUnidade", 0);
            
            estoque.iFrmCadUnidade cadUni = new estoque.iFrmCadUnidade();
            Desktop.add(cadUni);
            cadUni.setVisible(true);
        }
    }//GEN-LAST:event_cadUnidadesActionPerformed

    private void cadMontadorasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadMontadorasActionPerformed
        if(FrmLogin.usuario.verificarPermissao(this, "iFrmCadMontadora", 0)){
            // registro de log
            FrmLogin.log.gravar(
                    FrmLogin.usuario.getNomeUsuario(), "iFrmCadMontadora", 0);
        
            estoque.iFrmCadMontadora cadMon = new estoque.iFrmCadMontadora();
            Desktop.add(cadMon);
            cadMon.setVisible(true);
        }
    }//GEN-LAST:event_cadMontadorasActionPerformed

    private void cadTipoTintaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadTipoTintaActionPerformed
        if(FrmLogin.usuario.verificarPermissao(this, "iFrmCadTipoTinta", 0)){
            // registro de log
            FrmLogin.log.gravar(
                    FrmLogin.usuario.getNomeUsuario(), "iFrmCadTipoTinta", 0);
        
            estoque.iFrmCadTipoTinta cadTipoTinta = new estoque.iFrmCadTipoTinta();
            Desktop.add(cadTipoTinta);
            cadTipoTinta.setVisible(true);
        }
    }//GEN-LAST:event_cadTipoTintaActionPerformed

    private void cadMarcasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadMarcasActionPerformed
        if(FrmLogin.usuario.verificarPermissao(this, "iFrmCadMarca", 0)){
            // registro de log
            FrmLogin.log.gravar(
                    FrmLogin.usuario.getNomeUsuario(), "iFrmCadMarca", 0);
        
            estoque.iFrmCadMarca cadMarca = new estoque.iFrmCadMarca();
            Desktop.add(cadMarca);
            cadMarca.setVisible(true);
        }
    }//GEN-LAST:event_cadMarcasActionPerformed

    private void cadTintasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadTintasActionPerformed
        if(FrmLogin.usuario.verificarPermissao(this, "iFrmCadTinta", 0)){
            // registro de log
            FrmLogin.log.gravar(
                    FrmLogin.usuario.getNomeUsuario(), "iFrmCadTinta", 0);
            
            estoque.iFrmCadTinta cadTinta = new estoque.iFrmCadTinta();
            Desktop.add(cadTinta);
            cadTinta.setVisible(true);
        }
    }//GEN-LAST:event_cadTintasActionPerformed

    private void esVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_esVendaActionPerformed
//        estoque.iFrmVendas Vendas = new estoque.iFrmVendas();
//        Desktop.add(Vendas);
//        Vendas.setVisible(true);
        abrirVendas();
    }//GEN-LAST:event_esVendaActionPerformed

    private void finCaixaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finCaixaActionPerformed
        abrirCaixa();
    }//GEN-LAST:event_finCaixaActionPerformed

    private void finChequeCartaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finChequeCartaoActionPerformed
        if(FrmLogin.usuario.verificarPermissao(this, "iFrmChequeCartao", 0)){
            // registro de log
            FrmLogin.log.gravar(
                    FrmLogin.usuario.getNomeUsuario(), "iFrmChequeCartao", 0);
            
            financeiro.iFrmChequeCartao ChequeCartao = new financeiro.iFrmChequeCartao();
            Desktop.add(ChequeCartao);
            ChequeCartao.setVisible(true);
        }
    }//GEN-LAST:event_finChequeCartaoActionPerformed

    private void finFormaPagaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finFormaPagaActionPerformed
        if(FrmLogin.usuario.verificarPermissao(this, "iFrmFormasPagamento", 0)){
            // registro de log
            FrmLogin.log.gravar(
                    FrmLogin.usuario.getNomeUsuario(), "iFrmFormasPagamento", 0);
            
            financeiro.iFrmFormasPagamento FormasPagamento = new financeiro.iFrmFormasPagamento();
            Desktop.add(FormasPagamento);
            FormasPagamento.setVisible(true);
        }
    }//GEN-LAST:event_finFormaPagaActionPerformed

    private void finContaRecebeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finContaRecebeActionPerformed
        abrirContasReceber();
    }//GEN-LAST:event_finContaRecebeActionPerformed

    private void finContaPagaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finContaPagaActionPerformed
        abrirContasPagar();
    }//GEN-LAST:event_finContaPagaActionPerformed

    private void usTipoUsuariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usTipoUsuariosActionPerformed
        if(FrmLogin.usuario.verificarPermissao(this, "iFrmCadTipoUsuario", 0)){
            // registro de log
            FrmLogin.log.gravar(
                    FrmLogin.usuario.getNomeUsuario(), "iFrmCadTipoUsuario", 0);
            
            pessoa.iFrmCadTipoUsuario TipoUsuario = new pessoa.iFrmCadTipoUsuario();
            Desktop.add(TipoUsuario);
            TipoUsuario.setVisible(true);
        }
    }//GEN-LAST:event_usTipoUsuariosActionPerformed

    private void esPromocaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_esPromocaoActionPerformed
        if(FrmLogin.usuario.verificarPermissao(this, "iFrmCadPromocoes", 0)){
            // registro de log
            FrmLogin.log.gravar(
                    FrmLogin.usuario.getNomeUsuario(), "iFrmCadPromocoes", 0);
         
            estoque.iFrmCadPromocoes Promocoes = new estoque.iFrmCadPromocoes();
            Desktop.add(Promocoes);
            Promocoes.setVisible(true);
        }
    }//GEN-LAST:event_esPromocaoActionPerformed

    private void cadProdutosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadProdutosActionPerformed
        if(FrmLogin.usuario.verificarPermissao(this, "iFrmCadProduto", 0)){
            // registro de log
            FrmLogin.log.gravar(
                    FrmLogin.usuario.getNomeUsuario(), "iFrmCadProduto", 0);

            estoque.iFrmCadProduto Produto = new estoque.iFrmCadProduto();
            Desktop.add(Produto);
            Produto.setVisible(true);
        }
    }//GEN-LAST:event_cadProdutosActionPerformed

    private void esCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_esCompraActionPerformed
        abrirCompras();
//        estoque.iFrmCompra Compra = new estoque.iFrmCompra();
//        Desktop.add(Compra);
//        Compra.setVisible(true);
    }//GEN-LAST:event_esCompraActionPerformed

    private void btnPessoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPessoaActionPerformed
        pessoa.iFrmCadPessoa cadPes = new pessoa.iFrmCadPessoa();
        Desktop.add(cadPes);
        cadPes.setVisible(true);
    }//GEN-LAST:event_btnPessoaActionPerformed

    private void btnVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVendaActionPerformed
//        estoque.iFrmVendas Vendas = new estoque.iFrmVendas();
//        Desktop.add(Vendas);
//        Vendas.setVisible(true);
        abrirVendas();
    }//GEN-LAST:event_btnVendaActionPerformed

    private void btnCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCompraActionPerformed
        abrirCompras();
//        estoque.iFrmCompra Compra = new estoque.iFrmCompra();
//        Desktop.add(Compra);
//        Compra.setVisible(true);
    }//GEN-LAST:event_btnCompraActionPerformed

    private void btnTintaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTintaActionPerformed
        abrirProdTinta();
//        estoque.iFrmProdTinta prodTinta = new estoque.iFrmProdTinta();
//        Desktop.add(prodTinta);
//        prodTinta.setVisible(true);
    }//GEN-LAST:event_btnTintaActionPerformed

    private void btnPagaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPagaActionPerformed
        abrirContasPagar();
    }//GEN-LAST:event_btnPagaActionPerformed

    private void btnRecebeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRecebeActionPerformed
        abrirContasReceber();
    }//GEN-LAST:event_btnRecebeActionPerformed

    private void btnCaixaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCaixaActionPerformed
        abrirCaixa();
    }//GEN-LAST:event_btnCaixaActionPerformed

    private void esProdTintaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_esProdTintaActionPerformed
        abrirProdTinta();
//        estoque.iFrmProdTinta prodTinta = new estoque.iFrmProdTinta();
//        Desktop.add(prodTinta);
//        prodTinta.setVisible(true);
    }//GEN-LAST:event_esProdTintaActionPerformed

    private void usDesconectarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usDesconectarActionPerformed
        // fecha a tela principal
//        dispose();
//        
////        java.awt.EventQueue.invokeLater(new Runnable() {
////            public void run() {
//        principal.Principal.login.setVisible(true);
//        principal.FrmLogin.logado = false;
//            }
//        });
        desconectarUsuario();
    }//GEN-LAST:event_usDesconectarActionPerformed

    private void usTrocaUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usTrocaUsuarioActionPerformed
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//        principal.Principal.login.setVisible(true);                
//            }
//        });
        trocarUsuario();
    }//GEN-LAST:event_usTrocaUsuarioActionPerformed

    private void btnTrocarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTrocarUsuarioActionPerformed
//        principal.Principal.login.setVisible(true);
        trocarUsuario();
    }//GEN-LAST:event_btnTrocarUsuarioActionPerformed

    private void btnDesconectaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDesconectaActionPerformed
//        dispose();
//        
//        principal.Principal.login.setVisible(true);
//        principal.FrmLogin.logado = false;
        desconectarUsuario();
    }//GEN-LAST:event_btnDesconectaActionPerformed

    private void usSobreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usSobreActionPerformed
        principal.iFrmSobre sobre = new principal.iFrmSobre();
        Desktop.add(sobre);
        sobre.setVisible(true);
    }//GEN-LAST:event_usSobreActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        if(sistema.Mensagem.showConfirmDialog(this, 
                "Deseja realmente fechar o programa", "Confirmação") == 0){
            
            // registro de log
            FrmLogin.log.gravar(FrmLogin.usuario.getNomeUsuario(), 
                    sistema.Log.nomeTarefa(this), "fechado o sistema");
            
//            login.dispose();
//            dispose();
            System.exit(0);
        }
    }//GEN-LAST:event_formWindowClosing

    private void usPermTipoUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usPermTipoUsuarioActionPerformed
        abrirPermTipoUsuario();
    }//GEN-LAST:event_usPermTipoUsuarioActionPerformed

    private void usConfiguracoesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usConfiguracoesActionPerformed
        if(FrmLogin.usuario.verificarPermissao(this, "iFrmConfiguracoes", 0)){
            // registro de log
            FrmLogin.log.gravar(
                    FrmLogin.usuario.getNomeUsuario(), "iFrmConfiguracoes", 0);
        
            principal.iFrmConfiguracoes configuracoes = 
                    new principal.iFrmConfiguracoes(principal.Principal.conexao);
            Desktop.add(configuracoes);
            configuracoes.setVisible(true);
        }
    }//GEN-LAST:event_usConfiguracoesActionPerformed

    private void usBackupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usBackupActionPerformed
        if(FrmLogin.usuario.verificarPermissao(this, "iFrmBackup", 0)){
            // registro de log
            FrmLogin.log.gravar(
                    FrmLogin.usuario.getNomeUsuario(), "iFrmBackup", 0);
        
            principal.iFrmBackup backup = 
                    new principal.iFrmBackup(principal.Principal.conexao);
            Desktop.add(backup);
            backup.setVisible(true);
        }
    }//GEN-LAST:event_usBackupActionPerformed

    private void usHistoricoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usHistoricoActionPerformed
        if(FrmLogin.usuario.verificarPermissao(this, "iFrmHistorico", 0)){
            // registro de log
            FrmLogin.log.gravar(
                    FrmLogin.usuario.getNomeUsuario(), "iFrmHistorico", 0);
        
            principal.iFrmHistorico historico = 
                    new principal.iFrmHistorico();
            Desktop.add(historico);
            historico.setVisible(true);
        }
    }//GEN-LAST:event_usHistoricoActionPerformed

    private void finDespesasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finDespesasActionPerformed
        if(FrmLogin.usuario.verificarPermissao(this, "iFrmDespesas", 0)){
            // registro de log
            FrmLogin.log.gravar(
                    FrmLogin.usuario.getNomeUsuario(), "iFrmDespesas", 0);
        
            financeiro.iFrmDespesas despesas = 
                    new financeiro.iFrmDespesas();
            Desktop.add(despesas);
            despesas.setVisible(true);
        }
    }//GEN-LAST:event_finDespesasActionPerformed

    private void reClientesGeralActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reClientesGeralActionPerformed
        if(FrmLogin.usuario.verificarPermissao(this, "iFrm_rep_cliente_geral", 0)){
            // registro de log
            FrmLogin.log.gravar(
                    FrmLogin.usuario.getNomeUsuario(), "iFrm_rep_cliente_geral", 0);
            
            relatorio.iFrm_rep_cliente_geral relatorio = 
                        new relatorio.iFrm_rep_cliente_geral();
            Desktop.add(relatorio);
            relatorio.setVisible(true);
        }
    }//GEN-LAST:event_reClientesGeralActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        if(FrmLogin.usuario.verificarPermissao(this, "iFrmCancelarVenda", 0)){
            // registro de log
            FrmLogin.log.gravar(
                    FrmLogin.usuario.getNomeUsuario(), "iFrmCancelarVenda", 0);
            
            estoque.iFrmCancelarVenda cancVenda = 
                        new estoque.iFrmCancelarVenda();
            Desktop.add(cancVenda);
            cancVenda.setVisible(true);
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void reComissaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reComissaoActionPerformed
        if(FrmLogin.usuario.verificarPermissao(this, "iFrm_rep_comissao", 0)){
            // registro de log
            FrmLogin.log.gravar(
                    FrmLogin.usuario.getNomeUsuario(), "iFrm_rep_comissao", 0);
            
            relatorio.iFrm_rep_comissao relatorio = 
                        new relatorio.iFrm_rep_comissao();
            Desktop.add(relatorio);
            relatorio.setVisible(true);
        }
    }//GEN-LAST:event_reComissaoActionPerformed

    private void reContasReceberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reContasReceberActionPerformed
        if(FrmLogin.usuario.verificarPermissao(this, "iFrm_rep_lancamentos_conta_receber", 0)){
            // registro de log
            FrmLogin.log.gravar(
                    FrmLogin.usuario.getNomeUsuario(), "iFrm_rep_lancamentos_conta_receber", 0);
            
            relatorio.iFrm_rep_lancamentos_conta_receber relatorio = 
                        new relatorio.iFrm_rep_lancamentos_conta_receber();
            Desktop.add(relatorio);
            relatorio.setVisible(true);
        }
    }//GEN-LAST:event_reContasReceberActionPerformed

    private void reContasPagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reContasPagarActionPerformed
        if(FrmLogin.usuario.verificarPermissao(this, "iFrm_rep_lancamentos_conta_pagar", 0)){
            // registro de log
            FrmLogin.log.gravar(
                    FrmLogin.usuario.getNomeUsuario(), "iFrm_rep_lancamentos_conta_pagar", 0);
            
            relatorio.iFrm_rep_lancamentos_conta_pagar relatorio = 
                        new relatorio.iFrm_rep_lancamentos_conta_pagar();
            Desktop.add(relatorio);
            relatorio.setVisible(true);
        }
    }//GEN-LAST:event_reContasPagarActionPerformed

    private void reProducaoTintaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reProducaoTintaActionPerformed
        if(FrmLogin.usuario.verificarPermissao(this, "iFrm_rep_producao_tinta", 0)){
            // registro de log
            FrmLogin.log.gravar(
                    FrmLogin.usuario.getNomeUsuario(), "iFrm_rep_producao_tinta", 0);
            
            relatorio.iFrm_rep_producao_tinta relatorio = 
                        new relatorio.iFrm_rep_producao_tinta();
            Desktop.add(relatorio);
            relatorio.setVisible(true);
        }
    }//GEN-LAST:event_reProducaoTintaActionPerformed

    private void reFuncionariosGeralActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reFuncionariosGeralActionPerformed
        if(FrmLogin.usuario.verificarPermissao(this, "iFrm_rep_funcionarios_geral", 0)){
            // registro de log
            FrmLogin.log.gravar(
                    FrmLogin.usuario.getNomeUsuario(), "iFrm_rep_funcionarios_geral", 0);
            
            relatorio.iFrm_rep_funcionarios_geral relatorio = 
                        new relatorio.iFrm_rep_funcionarios_geral();
            Desktop.add(relatorio);
            relatorio.setVisible(true);
        }
    }//GEN-LAST:event_reFuncionariosGeralActionPerformed

    private void reFornecedoresGeralActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reFornecedoresGeralActionPerformed
        if(FrmLogin.usuario.verificarPermissao(this, "iFrm_rep_fornecedores_geral", 0)){
            // registro de log
            FrmLogin.log.gravar(
                    FrmLogin.usuario.getNomeUsuario(), "iFrm_rep_fornecedores_geral", 0);
            
            relatorio.iFrm_rep_fornecedores_geral relatorio = 
                        new relatorio.iFrm_rep_fornecedores_geral();
            Desktop.add(relatorio);
            relatorio.setVisible(true);
        }
    }//GEN-LAST:event_reFornecedoresGeralActionPerformed

    private void reVendasTotaisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reVendasTotaisActionPerformed
        if(FrmLogin.usuario.verificarPermissao(this, "iFrm_rep_vendas_total", 0)){
            // registro de log
            FrmLogin.log.gravar(
                    FrmLogin.usuario.getNomeUsuario(), "iFrm_rep_vendas_total", 0);
            
            relatorio.iFrm_rep_vendas_total relatorio = 
                        new relatorio.iFrm_rep_vendas_total();
            Desktop.add(relatorio);
            relatorio.setVisible(true);
        }
    }//GEN-LAST:event_reVendasTotaisActionPerformed

    private void reProdutosVendidosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reProdutosVendidosActionPerformed
        if(FrmLogin.usuario.verificarPermissao(this, "iFrm_rep_produtos_vendidos", 0)){
            // registro de log
            FrmLogin.log.gravar(
                    FrmLogin.usuario.getNomeUsuario(), "iFrm_rep_produtos_vendidos", 0);
            
            relatorio.iFrm_rep_produtos_vendidos relatorio = 
                        new relatorio.iFrm_rep_produtos_vendidos();
            Desktop.add(relatorio);
            relatorio.setVisible(true);
        }
    }//GEN-LAST:event_reProdutosVendidosActionPerformed

    private void reSimplesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reSimplesActionPerformed
        if(FrmLogin.usuario.verificarPermissao(this, "rep_produtos_simples", 0)){
            // registro de log
            FrmLogin.log.gravar(
                    FrmLogin.usuario.getNomeUsuario(), "rep_produtos_simples", 0);
            
            relatorio.Relatorios.rep_produtos_simples();
            
            // registro de log
            FrmLogin.log.gravar(
                FrmLogin.usuario.getNomeUsuario(),
                "rep_produtos_simples",
                "emitido relatório");
        }
    }//GEN-LAST:event_reSimplesActionPerformed

    private void reCompletoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reCompletoActionPerformed
        if(FrmLogin.usuario.verificarPermissao(this, "iFrm_rep_produtos_completo", 0)){
            // registro de log
            FrmLogin.log.gravar(
                    FrmLogin.usuario.getNomeUsuario(), "iFrm_rep_produtos_completo", 0);
            
            relatorio.iFrm_rep_produtos_completo relatorio = 
                        new relatorio.iFrm_rep_produtos_completo();
            Desktop.add(relatorio);
            relatorio.setVisible(true);
        }
    }//GEN-LAST:event_reCompletoActionPerformed

    private void reHistoricoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reHistoricoActionPerformed
        if(FrmLogin.usuario.verificarPermissao(this, "iFrm_rep_historico", 0)){
            // registro de log
            FrmLogin.log.gravar(
                    FrmLogin.usuario.getNomeUsuario(), "iFrm_rep_historico", 0);
            
            relatorio.iFrm_rep_historico relatorio = 
                        new relatorio.iFrm_rep_historico();
            Desktop.add(relatorio);
            relatorio.setVisible(true);
        }
    }//GEN-LAST:event_reHistoricoActionPerformed

    private void reUsuariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reUsuariosActionPerformed
        if(FrmLogin.usuario.verificarPermissao(this, "iFrm_rep_usuarios", 0)){
            // registro de log
            FrmLogin.log.gravar(
                    FrmLogin.usuario.getNomeUsuario(), "iFrm_rep_usuarios", 0);
            
            relatorio.iFrm_rep_usuarios relatorio = 
                        new relatorio.iFrm_rep_usuarios();
            Desktop.add(relatorio);
            relatorio.setVisible(true);
        }
    }//GEN-LAST:event_reUsuariosActionPerformed

    private void reCaixaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reCaixaActionPerformed
        if(FrmLogin.usuario.verificarPermissao(this, "iFrm_rep_caixas", 0)){
            // registro de log
            FrmLogin.log.gravar(
                    FrmLogin.usuario.getNomeUsuario(), "iFrm_rep_caixas", 0);
            
            relatorio.iFrm_rep_caixas relatorio = 
                        new relatorio.iFrm_rep_caixas();
            Desktop.add(relatorio);
            relatorio.setVisible(true);
        }
    }//GEN-LAST:event_reCaixaActionPerformed

    private void rePessoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rePessoaActionPerformed
        if(FrmLogin.usuario.verificarPermissao(this, "iFrmCadPessoa", 0)){
            // registro de log
            FrmLogin.log.gravar(
                    FrmLogin.usuario.getNomeUsuario(), "iFrmCadPessoa", "acessado relatório");
        
            relatorio.iFrm_rep_pessoas pessoa = new relatorio.iFrm_rep_pessoas();
            Desktop.add(pessoa);
            pessoa.setVisible(true);
        }
    }//GEN-LAST:event_rePessoaActionPerformed

    private void reControleChequeCartaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reControleChequeCartaoActionPerformed
        if(FrmLogin.usuario.verificarPermissao(this, "iFrm_rep_controle_ch_ct", 0)){
            // registro de log
            FrmLogin.log.gravar(
                    FrmLogin.usuario.getNomeUsuario(), "iFrm_rep_controle_ch_ct", 0);
            
            relatorio.iFrm_rep_controle_ch_ct relatorio = 
                        new relatorio.iFrm_rep_controle_ch_ct();
            Desktop.add(relatorio);
            relatorio.setVisible(true);
        }
    }//GEN-LAST:event_reControleChequeCartaoActionPerformed

    private void reDespesasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reDespesasActionPerformed
        if(FrmLogin.usuario.verificarPermissao(this, "iFrm_rep_despesas", 0)){
            // registro de log
            FrmLogin.log.gravar(
                    FrmLogin.usuario.getNomeUsuario(), "iFrm_rep_despesas", 0);
            
            relatorio.iFrm_rep_despesas relatorio = 
                        new relatorio.iFrm_rep_despesas();
            Desktop.add(relatorio);
            relatorio.setVisible(true);
        }
    }//GEN-LAST:event_reDespesasActionPerformed

    private void reClientesMaisComprasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reClientesMaisComprasActionPerformed
        if(FrmLogin.usuario.verificarPermissao(this, "iFrm_rep_vendas_melhores_compradores", 0)){
            // registro de log
            FrmLogin.log.gravar(
                    FrmLogin.usuario.getNomeUsuario(), "iFrm_rep_vendas_melhores_compradores", 0);
            
            relatorio.iFrm_rep_vendas_melhores_compradores relatorio = 
                        new relatorio.iFrm_rep_vendas_melhores_compradores();
            Desktop.add(relatorio);
            relatorio.setVisible(true);
        }
    }//GEN-LAST:event_reClientesMaisComprasActionPerformed

    private void rePromocoesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rePromocoesActionPerformed
        if(FrmLogin.usuario.verificarPermissao(this, "iFrm_rep_promocoes", 0)){
            // registro de log
            FrmLogin.log.gravar(
                    FrmLogin.usuario.getNomeUsuario(), "iFrm_rep_promocoes", 0);
            
            relatorio.iFrm_rep_promocoes relatorio = 
                        new relatorio.iFrm_rep_promocoes();
            Desktop.add(relatorio);
            relatorio.setVisible(true);
        }
    }//GEN-LAST:event_rePromocoesActionPerformed

    private void reComprasTotaisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reComprasTotaisActionPerformed
        if(FrmLogin.usuario.verificarPermissao(this, "iFrm_rep_compras_total", 0)){
            // registro de log
            FrmLogin.log.gravar(
                    FrmLogin.usuario.getNomeUsuario(), "iFrm_rep_compras_total", 0);
            
            relatorio.iFrm_rep_compras_total relatorio = 
                        new relatorio.iFrm_rep_compras_total();
            Desktop.add(relatorio);
            relatorio.setVisible(true);
        }
    }//GEN-LAST:event_reComprasTotaisActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        if(FrmLogin.usuario.verificarPermissao(this, "iFrmVendas", 0)){
            // registro de log
            FrmLogin.log.gravar(
                    FrmLogin.usuario.getNomeUsuario(), 
                    "iFrmVendas", "acessado impressão de venda");
            
            relatorio.iFrm_rep_venda_esp relatorio = new relatorio.iFrm_rep_venda_esp();
            Desktop.add(relatorio);
            relatorio.setVisible(true);
        }
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void reCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reCompraActionPerformed
        if(FrmLogin.usuario.verificarPermissao(this, "iFrmCompra", 0)){
            // registro de log
            FrmLogin.log.gravar(
                    FrmLogin.usuario.getNomeUsuario(), "iFrmCompra", 
                    "acessado impressão de compra");
        
            relatorio.iFrm_rep_compra_esp relatorio = new relatorio.iFrm_rep_compra_esp();
            Desktop.add(relatorio);
            relatorio.setVisible(true);
        }
    }//GEN-LAST:event_reCompraActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new FrmPrincipal().setVisible(true);
//            }
//        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JToolBar BarraFerramenta;
    public static javax.swing.JDesktopPane Desktop;
    public static javax.swing.JMenuBar Menu;
    private javax.swing.JButton btnCaixa;
    private javax.swing.JButton btnCompra;
    private javax.swing.JButton btnDesconecta;
    private javax.swing.JButton btnPaga;
    private javax.swing.JButton btnPessoa;
    private javax.swing.JButton btnRecebe;
    private javax.swing.JButton btnTinta;
    private javax.swing.JButton btnTrocarUsuario;
    private javax.swing.JButton btnVenda;
    private javax.swing.JMenuItem cadCatProduto;
    private javax.swing.JMenuItem cadCatTinta;
    private javax.swing.JMenuItem cadMarcas;
    private javax.swing.JMenuItem cadMontadoras;
    private javax.swing.JMenuItem cadPessoas;
    private javax.swing.JMenuItem cadProdutos;
    private javax.swing.JMenuItem cadTintas;
    private javax.swing.JMenuItem cadTipoTinta;
    private javax.swing.JMenuItem cadUnidades;
    private javax.swing.JMenuItem esCompra;
    private javax.swing.JMenuItem esProdTinta;
    private javax.swing.JMenuItem esPromocao;
    private javax.swing.JMenuItem esVenda;
    private javax.swing.JMenuItem finCaixa;
    private javax.swing.JMenuItem finChequeCartao;
    private javax.swing.JMenuItem finContaPaga;
    private javax.swing.JMenuItem finContaRecebe;
    private javax.swing.JMenuItem finDespesas;
    private javax.swing.JMenuItem finFormaPaga;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JMenu mnCadastrar;
    private javax.swing.JMenu mnEstoque;
    private javax.swing.JMenu mnFerramentas;
    private javax.swing.JMenu mnFinanceiro;
    private javax.swing.JMenu mnRelatórios;
    private javax.swing.JMenu mnUsuario;
    private javax.swing.JMenuItem reCaixa;
    private javax.swing.JMenuItem reClientesGeral;
    private javax.swing.JMenuItem reClientesMaisCompras;
    private javax.swing.JMenuItem reComissao;
    private javax.swing.JMenuItem reCompleto;
    private javax.swing.JMenuItem reCompra;
    private javax.swing.JMenuItem reComprasTotais;
    private javax.swing.JMenuItem reContasPagar;
    private javax.swing.JMenuItem reContasReceber;
    private javax.swing.JMenuItem reControleChequeCartao;
    private javax.swing.JMenuItem reDespesas;
    private javax.swing.JMenuItem reFornecedoresGeral;
    private javax.swing.JMenuItem reFuncionariosGeral;
    private javax.swing.JMenuItem reHistorico;
    private javax.swing.JMenuItem rePessoa;
    private javax.swing.JMenuItem reProducaoTinta;
    private javax.swing.JMenuItem reProdutosVendidos;
    private javax.swing.JMenuItem rePromocoes;
    private javax.swing.JMenuItem reSimples;
    private javax.swing.JMenuItem reUsuarios;
    private javax.swing.JMenuItem reVendasTotais;
    private javax.swing.JMenu smProdutos;
    private javax.swing.JMenuItem usBackup;
    private javax.swing.JMenuItem usConfiguracoes;
    private javax.swing.JMenuItem usDesconectar;
    private javax.swing.JMenuItem usHistorico;
    private javax.swing.JMenuItem usPermTipoUsuario;
    private javax.swing.JMenuItem usSobre;
    private javax.swing.JMenuItem usTipoUsuarios;
    private javax.swing.JMenuItem usTrocaUsuario;
    private javax.swing.JMenuItem usUsuarios;
    // End of variables declaration//GEN-END:variables

    private void trocarUsuario(){
        // registro de log
        FrmLogin.log.gravar(FrmLogin.usuario.getNomeUsuario(), 
                sistema.Log.nomeTarefa(this), "logoff do sistema");
        
        principal.Principal.login.setVisible(true);
    }
    
    private void desconectarUsuario(){
        // registro de log
        FrmLogin.log.gravar(FrmLogin.usuario.getNomeUsuario(), 
                sistema.Log.nomeTarefa(this), "logoff do sistema");
        
        dispose();
        
        principal.Principal.login.setVisible(true);
        principal.FrmLogin.logado = false;
    }
    
    private void abrirVendas(){
        if(FrmLogin.usuario.verificarPermissao(this, "iFrmVendas", 0)){
            // registro de log
            FrmLogin.log.gravar(FrmLogin.usuario.getNomeUsuario(), 
                    "iFrmVendas", 0);
            
            estoque.iFrmVendas Vendas = new estoque.iFrmVendas();
            Desktop.add(Vendas);
            Vendas.setVisible(true);
        }
    }
    
    private void abrirCompras(){
        if(FrmLogin.usuario.verificarPermissao(this, "iFrmCompra", 0)){
            // registro de log
            FrmLogin.log.gravar(
                    FrmLogin.usuario.getNomeUsuario(), "iFrmCompra", 0);
        
            estoque.iFrmCompra Compra = new estoque.iFrmCompra();
            Desktop.add(Compra);
            Compra.setVisible(true);
        }
    }
    
    private void abrirProdTinta(){
        if(FrmLogin.usuario.verificarPermissao(this, "iFrmProdTinta", 0)){
            // registro de log
            FrmLogin.log.gravar(
                    FrmLogin.usuario.getNomeUsuario(), "iFrmProdTinta", 0);
            
            estoque.iFrmProdTinta prodTinta = new estoque.iFrmProdTinta();
            Desktop.add(prodTinta);
            prodTinta.setVisible(true);
        }
    }
    
    private void abrirPermTipoUsuario(){
        if(FrmLogin.usuario.verificarPermissao(this, "iFrmPermTipoUsuario", 0)){
            // registro de log
            FrmLogin.log.gravar(
                    FrmLogin.usuario.getNomeUsuario(), "iFrmPermTipoUsuario", 0);
            
            principal.iFrmPermTipoUsuario permTipoUsuario = new principal.iFrmPermTipoUsuario();
            Desktop.add(permTipoUsuario);
            permTipoUsuario.setVisible(true);
        }
    }
    
    private void abrirCaixa(){
        if(FrmLogin.usuario.verificarPermissao(this, "iFrmCaixa", 0)){
            // registro de log
            FrmLogin.log.gravar(
                    FrmLogin.usuario.getNomeUsuario(), "iFrmCaixa", 0);
            
            financeiro.iFrmCaixa Caixa = new financeiro.iFrmCaixa();
            Desktop.add(Caixa);
            Caixa.setVisible(true);
        }
    }
    
    private void abrirContasReceber(){
        if(FrmLogin.usuario.verificarPermissao(this, "iFrmContasReceber", 0)){
            // registro de log
            FrmLogin.log.gravar(
                    FrmLogin.usuario.getNomeUsuario(), "iFrmContasReceber", 0);
            
            financeiro.iFrmContas ContasReceber = new financeiro.iFrmContas(true);
            Desktop.add(ContasReceber);
            ContasReceber.setVisible(true);
        }
    }
    
    private void abrirContasPagar(){
        if(FrmLogin.usuario.verificarPermissao(this, "iFrmContasPagar", 0)){
            // registro de log
            FrmLogin.log.gravar(
                    FrmLogin.usuario.getNomeUsuario(), "iFrmContasPagar", 0);
            
            financeiro.iFrmContas ContasReceber = new financeiro.iFrmContas(false);
            Desktop.add(ContasReceber);
            ContasReceber.setVisible(true);
        }
    }
    
    public void alterarTitulo(){
//        Loja de Tintas - OrionS
        String titulo, usuario, tipo;
        titulo = "Loja de Tintas - OrionS";
        usuario = FrmLogin.usuario.getNomeUsuario();
        tipo = FrmLogin.usuario.getDescricaoTipoUsuario();
        
        titulo = String.format("%s - %s: %s", titulo, usuario, tipo);
        
        setTitle(titulo);
    }
}

