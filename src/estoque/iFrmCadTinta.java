/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package estoque;

import java.text.DecimalFormat;
import java.util.LinkedHashMap;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.text.DefaultFormatterFactory;
import javax.swing.text.NumberFormatter;
import lib.jdb.jdbquery.JDBQuery;
import lib.jdb.jdbupdate.JDBUpdate;
import principal.FrmLogin;

public class iFrmCadTinta extends javax.swing.JInternalFrame {
    int idTinta, idBase, idProduto;
    boolean alteracaoTinta, alteracaoBase, pesquisaTinta, pesquisaBase;
    JDBQuery qryTinta, qryBaseTinta, qryCategTinta, qryMontadora, qryUnidade, 
            qryUnidadeBase, qryTipoTinta, qryTemp;
    JDBUpdate updTransacao;
    
    /**
     * Creates new form iFrmCadTinta
     */
    public iFrmCadTinta() {
        // criando componentes JDB e alimentando com sql
        updTransacao = new JDBUpdate();
        updTransacao.setJDBConnection(principal.Principal.conexao.getConexao());
        
        qryTinta = new JDBQuery();
        qryBaseTinta = new JDBQuery();
        qryCategTinta = new JDBQuery();
        qryMontadora = new JDBQuery();
        qryUnidade = new JDBQuery();
        qryUnidadeBase = new JDBQuery();
        qryTipoTinta = new JDBQuery();
        qryTemp = new JDBQuery();        
        
        JDBQuery[] vetorQry = {qryTinta, qryBaseTinta, qryCategTinta, qryMontadora, qryUnidade, 
            qryUnidadeBase, qryTipoTinta, qryTemp};
        for(JDBQuery qry: vetorQry){
            qry.setJDBConnection(principal.Principal.conexao.getConexao());
            qry.setConcurUpdatable(false);
            qry.setTimeStampFormat("dd/MM/YYYY HH:mm:ss");
            qry.setDateFormat("dd/MM/yyyy");
            qry.setLanguage("pt");
            qry.setDecimalFormat("#.000");
        }
        
        qryCategTinta.setSQL("SELECT id, descricao FROM categorias_tinta");
        qryTipoTinta.setSQL("SELECT id, descricao FROM tipos_tinta");
        qryMontadora.setSQL("SELECT sigla, descricao FROM montadoras");
        qryUnidade.setSQL("SELECT sigla FROM unidades");
        qryUnidadeBase.setSQL("SELECT sigla FROM unidades");
        
        // a execução das qrys está no método limpar, executado no final do construtor.
        
        initComponents();
        
        //impedindo que a janela seja fechada
        this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        
        // associando listcombobox as querys
        cbxCategTinta.setJDBListQuery(qryCategTinta);
        cbxCategTinta.setKeyListField("id");
        
        cbxTipoTinta.setJDBListQuery(qryTipoTinta);
        cbxTipoTinta.setKeyListField("id");
        
        cbxMontadora.setJDBListQuery(qryMontadora);
        cbxMontadora.setKeyListField("sigla");
        
        cbxUnidade.setJDBListQuery(qryUnidade);
        cbxUnidade.setKeyListField("sigla");
        
        cbxUnidadeBase.setJDBListQuery(qryUnidadeBase);
        cbxUnidadeBase.setKeyListField("sigla");        
        
        // definindo campos invisíveis nos combobox
        cbxCategTinta.setInvisibleFields("id");
        cbxTipoTinta.setInvisibleFields("id");
        cbxMontadora.setInvisibleFields("sigla");
        
        // mascara para decimal
        DecimalFormat decimal = new DecimalFormat("######0.000");        
        NumberFormatter numFormatter = new NumberFormatter(decimal);
        numFormatter.setFormat(decimal);
        numFormatter.setAllowsInvalid(false);
        DefaultFormatterFactory dfFactory = new DefaultFormatterFactory(numFormatter);
        
        txtProducao.setFormatterFactory(dfFactory);
        txtMinimo.setFormatterFactory(dfFactory);
        txtQuantidade.setFormatterFactory(dfFactory);
        
        // limpeza inicial do formulário
        limpar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDBCalendar1 = new lib.jdb.control.jdbcalendar.JDBCalendar();
        pnDadosTinta = new javax.swing.JPanel();
        pnCodigoDT = new javax.swing.JPanel();
        txtID_DT = new lib.jdb.control.jdbtextfield.JDBTextField();
        lblNome = new javax.swing.JLabel();
        txtNome = new lib.jdb.control.jdbtextfield.JDBTextField();
        lblCodTinta = new javax.swing.JLabel();
        txtCodTinta = new lib.jdb.control.jdbtextfield.JDBTextField();
        pnAno = new javax.swing.JPanel();
        lblInicial = new javax.swing.JLabel();
        lblFinal = new javax.swing.JLabel();
        txtInicial = new lib.jdb.control.jdbtextfield.JDBTextField();
        txtFinal = new lib.jdb.control.jdbtextfield.JDBTextField();
        lblCatTinta = new javax.swing.JLabel();
        lblTipoTinta = new javax.swing.JLabel();
        lblMont = new javax.swing.JLabel();
        pnQuantidade = new javax.swing.JPanel();
        lblProducao = new javax.swing.JLabel();
        lblMinima = new javax.swing.JLabel();
        txtProducao = new javax.swing.JFormattedTextField();
        txtMinimo = new javax.swing.JFormattedTextField();
        lblUnidade_DT = new javax.swing.JLabel();
        pnDatas = new javax.swing.JPanel();
        lblInc = new javax.swing.JLabel();
        txtInc = new lib.jdb.control.jdbtextfield.JDBTextField();
        lblMod = new javax.swing.JLabel();
        txtMod = new lib.jdb.control.jdbtextfield.JDBTextField();
        cbxCategTinta = new lib.jdb.control.jdblistcombobox.JDBListComboBox();
        cbxMontadora = new lib.jdb.control.jdblistcombobox.JDBListComboBox();
        cbxTipoTinta = new lib.jdb.control.jdblistcombobox.JDBListComboBox();
        cbxUnidade = new lib.jdb.control.jdblistcombobox.JDBListComboBox();
        pnBasesTinta = new javax.swing.JPanel();
        scrlBaseTinta = new javax.swing.JScrollPane();
        tbBaseTinta = new lib.jdb.control.jdbtable.JDBTable();
        pnCodigo_BT = new javax.swing.JPanel();
        txtID_BT = new lib.jdb.control.jdbtextfield.JDBTextField();
        lblProduto = new javax.swing.JLabel();
        txtProduto = new lib.jdb.control.jdbtextfield.JDBTextField();
        lblCodBase = new javax.swing.JLabel();
        txtCodBase = new lib.jdb.control.jdbtextfield.JDBTextField();
        lblQuantidade = new javax.swing.JLabel();
        lblUnidade_BT = new javax.swing.JLabel();
        btnSalvar_BT = new lib.jdb.control.jdbbuttonsave.JDBButtonSave();
        btnCancelar_Pes = new lib.jdb.control.jdbbuttoncancel.JDBButtonCancel();
        btnConsultar1 = new javax.swing.JButton();
        pnDatas1 = new javax.swing.JPanel();
        lblInc1 = new javax.swing.JLabel();
        txtInc1 = new lib.jdb.control.jdbtextfield.JDBTextField();
        lblMod1 = new javax.swing.JLabel();
        txtMod1 = new lib.jdb.control.jdbtextfield.JDBTextField();
        txtQuantidade = new javax.swing.JFormattedTextField();
        cbxUnidadeBase = new lib.jdb.control.jdblistcombobox.JDBListComboBox();
        jButton2 = new javax.swing.JButton();
        btnSalvar = new lib.jdb.control.jdbbuttonsave.JDBButtonSave();
        btnConsultar = new javax.swing.JButton();
        btnCancelar_Pes1 = new lib.jdb.control.jdbbuttoncancel.JDBButtonCancel();
        jButton1 = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("Cadastro de Tinta");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        pnDadosTinta.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, new java.awt.Color(204, 204, 204), new java.awt.Color(153, 153, 153)), "Dados da Tinta", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial", 1, 12), new java.awt.Color(102, 102, 102))); // NOI18N

        pnCodigoDT.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, new java.awt.Color(204, 204, 204), new java.awt.Color(153, 153, 153)), "Código", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial", 1, 12), new java.awt.Color(102, 102, 102))); // NOI18N

        txtID_DT.setFocusable(false);
        txtID_DT.setFont(principal.FrmLogin.fontePadrao);

        javax.swing.GroupLayout pnCodigoDTLayout = new javax.swing.GroupLayout(pnCodigoDT);
        pnCodigoDT.setLayout(pnCodigoDTLayout);
        pnCodigoDTLayout.setHorizontalGroup(
            pnCodigoDTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnCodigoDTLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtID_DT, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnCodigoDTLayout.setVerticalGroup(
            pnCodigoDTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnCodigoDTLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(txtID_DT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5))
        );

        lblNome.setFont(principal.FrmLogin.fontePadrao);
        lblNome.setText("Nome:");

        txtNome.setFont(principal.FrmLogin.fontePadrao);

        lblCodTinta.setFont(principal.FrmLogin.fontePadrao);
        lblCodTinta.setText("Código da Tinta:");

        txtCodTinta.setFont(principal.FrmLogin.fontePadrao);

        pnAno.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, new java.awt.Color(204, 204, 204), new java.awt.Color(153, 153, 153)), "Ano", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial", 1, 12), new java.awt.Color(102, 102, 102))); // NOI18N

        lblInicial.setFont(principal.FrmLogin.fontePadrao);
        lblInicial.setText("Inicial:");

        lblFinal.setFont(principal.FrmLogin.fontePadrao);
        lblFinal.setText("Final:");

        txtInicial.setFont(principal.FrmLogin.fontePadrao);

        txtFinal.setFont(principal.FrmLogin.fontePadrao);

        javax.swing.GroupLayout pnAnoLayout = new javax.swing.GroupLayout(pnAno);
        pnAno.setLayout(pnAnoLayout);
        pnAnoLayout.setHorizontalGroup(
            pnAnoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnAnoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnAnoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblInicial)
                    .addComponent(txtInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnAnoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblFinal)
                    .addComponent(txtFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        pnAnoLayout.setVerticalGroup(
            pnAnoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnAnoLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(pnAnoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnAnoLayout.createSequentialGroup()
                        .addComponent(lblFinal)
                        .addGap(6, 6, 6)
                        .addComponent(txtFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnAnoLayout.createSequentialGroup()
                        .addComponent(lblInicial)
                        .addGap(6, 6, 6)
                        .addComponent(txtInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(5, 5, 5))
        );

        lblCatTinta.setFont(principal.FrmLogin.fontePadrao);
        lblCatTinta.setText("Categoria de Tinta:");

        lblTipoTinta.setFont(principal.FrmLogin.fontePadrao);
        lblTipoTinta.setText("Tipo de Tinta:");

        lblMont.setFont(principal.FrmLogin.fontePadrao);
        lblMont.setText("Montadora:");

        pnQuantidade.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, new java.awt.Color(204, 204, 204), new java.awt.Color(153, 153, 153)), "Quantidade", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial", 1, 12), new java.awt.Color(102, 102, 102))); // NOI18N

        lblProducao.setFont(principal.FrmLogin.fontePadrao);
        lblProducao.setText("Produção:");

        lblMinima.setFont(principal.FrmLogin.fontePadrao);
        lblMinima.setText("Mínimo:");

        txtProducao.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("###0.00#"))));

        txtMinimo.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("###0.00#"))));
        txtMinimo.setNextFocusableComponent(cbxUnidade);

        javax.swing.GroupLayout pnQuantidadeLayout = new javax.swing.GroupLayout(pnQuantidade);
        pnQuantidade.setLayout(pnQuantidadeLayout);
        pnQuantidadeLayout.setHorizontalGroup(
            pnQuantidadeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnQuantidadeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnQuantidadeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblProducao)
                    .addComponent(txtProducao, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnQuantidadeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtMinimo, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblMinima))
                .addContainerGap())
        );
        pnQuantidadeLayout.setVerticalGroup(
            pnQuantidadeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnQuantidadeLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(pnQuantidadeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblProducao)
                    .addComponent(lblMinima))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnQuantidadeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtProducao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMinimo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5))
        );

        lblUnidade_DT.setFont(principal.FrmLogin.fontePadrao);
        lblUnidade_DT.setText("Unidade:");

        pnDatas.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, new java.awt.Color(204, 204, 204), new java.awt.Color(153, 153, 153)), "Datas", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial", 1, 12), new java.awt.Color(102, 102, 102))); // NOI18N

        lblInc.setFont(principal.FrmLogin.fontePadrao);
        lblInc.setText("Inclusão:");

        txtInc.setFocusable(false);

        lblMod.setFont(principal.FrmLogin.fontePadrao);
        lblMod.setText("Modificação:");

        txtMod.setFocusable(false);

        javax.swing.GroupLayout pnDatasLayout = new javax.swing.GroupLayout(pnDatas);
        pnDatas.setLayout(pnDatasLayout);
        pnDatasLayout.setHorizontalGroup(
            pnDatasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnDatasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnDatasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblInc)
                    .addComponent(txtInc, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnDatasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnDatasLayout.createSequentialGroup()
                        .addComponent(lblMod)
                        .addGap(14, 14, 14))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnDatasLayout.createSequentialGroup()
                        .addComponent(txtMod, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        pnDatasLayout.setVerticalGroup(
            pnDatasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnDatasLayout.createSequentialGroup()
                .addGroup(pnDatasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnDatasLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblMod)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtMod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnDatasLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(lblInc)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtInc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(10, 10, 10))
        );

        cbxUnidade.setNextFocusableComponent(btnSalvar);

        javax.swing.GroupLayout pnDadosTintaLayout = new javax.swing.GroupLayout(pnDadosTinta);
        pnDadosTinta.setLayout(pnDadosTintaLayout);
        pnDadosTintaLayout.setHorizontalGroup(
            pnDadosTintaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnDadosTintaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnDadosTintaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnDadosTintaLayout.createSequentialGroup()
                        .addGroup(pnDadosTintaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblTipoTinta, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblUnidade_DT, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pnCodigoDT, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(207, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnDadosTintaLayout.createSequentialGroup()
                        .addGroup(pnDadosTintaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(pnDatas, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pnQuantidade, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(pnDadosTintaLayout.createSequentialGroup()
                                .addGroup(pnDadosTintaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblCatTinta)
                                    .addComponent(cbxCategTinta, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(pnDadosTintaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbxMontadora, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblMont)))
                            .addComponent(pnAno, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(pnDadosTintaLayout.createSequentialGroup()
                                .addGroup(pnDadosTintaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtNome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(pnDadosTintaLayout.createSequentialGroup()
                                        .addComponent(lblNome)
                                        .addGap(0, 0, Short.MAX_VALUE)))
                                .addGap(18, 18, 18)
                                .addGroup(pnDadosTintaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblCodTinta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtCodTinta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(10, 10, 10))
                    .addGroup(pnDadosTintaLayout.createSequentialGroup()
                        .addGroup(pnDadosTintaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbxTipoTinta, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbxUnidade, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        pnDadosTintaLayout.setVerticalGroup(
            pnDadosTintaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnDadosTintaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnCodigoDT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(pnDadosTintaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnDadosTintaLayout.createSequentialGroup()
                        .addComponent(lblNome)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnDadosTintaLayout.createSequentialGroup()
                        .addComponent(lblCodTinta)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCodTinta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(13, 13, 13)
                .addComponent(pnAno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnDadosTintaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCatTinta)
                    .addComponent(lblMont))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnDadosTintaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbxCategTinta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbxMontadora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblTipoTinta)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbxTipoTinta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblUnidade_DT)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbxUnidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnDatas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(7, 7, 7))
        );

        pnBasesTinta.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, new java.awt.Color(204, 204, 204), new java.awt.Color(153, 153, 153)), "Bases de Tinta", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial", 1, 12), new java.awt.Color(102, 102, 102))); // NOI18N

        scrlBaseTinta.setFont(principal.FrmLogin.fontePadrao);

        tbBaseTinta.setFont(principal.FrmLogin.fontePadrao);
        tbBaseTinta.setToolTipText("Duplo clique para selecionar a base de tinta");
        tbBaseTinta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbBaseTintaMouseClicked(evt);
            }
        });
        scrlBaseTinta.setViewportView(tbBaseTinta);

        pnCodigo_BT.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, new java.awt.Color(204, 204, 204), new java.awt.Color(153, 153, 153)), "Código", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial", 1, 12), new java.awt.Color(102, 102, 102))); // NOI18N

        txtID_BT.setFocusable(false);
        txtID_BT.setFont(principal.FrmLogin.fontePadrao);

        javax.swing.GroupLayout pnCodigo_BTLayout = new javax.swing.GroupLayout(pnCodigo_BT);
        pnCodigo_BT.setLayout(pnCodigo_BTLayout);
        pnCodigo_BTLayout.setHorizontalGroup(
            pnCodigo_BTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnCodigo_BTLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtID_BT, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnCodigo_BTLayout.setVerticalGroup(
            pnCodigo_BTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnCodigo_BTLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(txtID_BT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5))
        );

        lblProduto.setFont(principal.FrmLogin.fontePadrao);
        lblProduto.setText("Produto:");

        txtProduto.setFocusable(false);
        txtProduto.setFont(principal.FrmLogin.fontePadrao);

        lblCodBase.setFont(principal.FrmLogin.fontePadrao);
        lblCodBase.setText("Código Base:");

        txtCodBase.setFocusable(false);
        txtCodBase.setFont(principal.FrmLogin.fontePadrao);

        lblQuantidade.setFont(principal.FrmLogin.fontePadrao);
        lblQuantidade.setText("Quantidade:");

        lblUnidade_BT.setFont(principal.FrmLogin.fontePadrao);
        lblUnidade_BT.setText("Unidade:");

        btnSalvar_BT.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/save.png"))); // NOI18N
        btnSalvar_BT.setMnemonic('a');
        btnSalvar_BT.setFont(principal.FrmLogin.fontePadrao);
        btnSalvar_BT.setText("Salvar");
        btnSalvar_BT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvar_BTActionPerformed(evt);
            }
        });

        btnCancelar_Pes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/return2.png"))); // NOI18N
        btnCancelar_Pes.setMnemonic('i');
        btnCancelar_Pes.setFont(principal.FrmLogin.fontePadrao);
        btnCancelar_Pes.setText("Limpar");
        btnCancelar_Pes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelar_PesActionPerformed(evt);
            }
        });

        btnConsultar1.setFont(principal.FrmLogin.fontePadrao);
        btnConsultar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/look.png"))); // NOI18N
        btnConsultar1.setMnemonic('o');
        btnConsultar1.setText("Consultar");
        btnConsultar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultar1ActionPerformed(evt);
            }
        });

        pnDatas1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, new java.awt.Color(204, 204, 204), new java.awt.Color(153, 153, 153)), "Datas", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial", 1, 12), new java.awt.Color(102, 102, 102))); // NOI18N

        lblInc1.setFont(principal.FrmLogin.fontePadrao);
        lblInc1.setText("Inclusão:");

        txtInc1.setFocusable(false);

        lblMod1.setFont(principal.FrmLogin.fontePadrao);
        lblMod1.setText("Modificação:");

        txtMod1.setFocusable(false);

        javax.swing.GroupLayout pnDatas1Layout = new javax.swing.GroupLayout(pnDatas1);
        pnDatas1.setLayout(pnDatas1Layout);
        pnDatas1Layout.setHorizontalGroup(
            pnDatas1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnDatas1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnDatas1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblInc1)
                    .addComponent(txtInc1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnDatas1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnDatas1Layout.createSequentialGroup()
                        .addComponent(lblMod1)
                        .addGap(14, 14, 14))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnDatas1Layout.createSequentialGroup()
                        .addComponent(txtMod1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        pnDatas1Layout.setVerticalGroup(
            pnDatas1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnDatas1Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(pnDatas1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblInc1)
                    .addComponent(lblMod1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnDatas1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtMod1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtInc1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5))
        );

        txtQuantidade.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("###0.00#"))));
        txtQuantidade.setNextFocusableComponent(btnSalvar_BT);

        cbxUnidadeBase.setEnabled(false);
        cbxUnidadeBase.setFocusable(false);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/delete.png"))); // NOI18N
        jButton2.setMnemonic('e');
        jButton2.setText("Remover");
        jButton2.setNextFocusableComponent(txtNome);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnBasesTintaLayout = new javax.swing.GroupLayout(pnBasesTinta);
        pnBasesTinta.setLayout(pnBasesTintaLayout);
        pnBasesTintaLayout.setHorizontalGroup(
            pnBasesTintaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnBasesTintaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnBasesTintaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnBasesTintaLayout.createSequentialGroup()
                        .addGroup(pnBasesTintaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtProduto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnBasesTintaLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(scrlBaseTinta, javax.swing.GroupLayout.PREFERRED_SIZE, 415, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(pnDatas1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())
                    .addGroup(pnBasesTintaLayout.createSequentialGroup()
                        .addGroup(pnBasesTintaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnBasesTintaLayout.createSequentialGroup()
                                .addComponent(btnSalvar_BT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnConsultar1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnCancelar_Pes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton2))
                            .addComponent(lblProduto)
                            .addComponent(lblUnidade_BT)
                            .addComponent(pnCodigo_BT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnBasesTintaLayout.createSequentialGroup()
                                .addGroup(pnBasesTintaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(cbxUnidadeBase, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblCodBase, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtCodBase, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(pnBasesTintaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblQuantidade)
                                    .addComponent(txtQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        pnBasesTintaLayout.setVerticalGroup(
            pnBasesTintaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnBasesTintaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scrlBaseTinta, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnCodigo_BT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblProduto)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnBasesTintaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnBasesTintaLayout.createSequentialGroup()
                        .addComponent(lblCodBase)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnBasesTintaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCodBase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnBasesTintaLayout.createSequentialGroup()
                        .addComponent(lblQuantidade)
                        .addGap(33, 33, 33)))
                .addComponent(lblUnidade_BT)
                .addGap(4, 4, 4)
                .addComponent(cbxUnidadeBase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnDatas1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(pnBasesTintaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSalvar_BT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCancelar_Pes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnConsultar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2))
                .addContainerGap())
        );

        btnSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/save.png"))); // NOI18N
        btnSalvar.setMnemonic('s');
        btnSalvar.setFont(principal.FrmLogin.fontePadrao);
        btnSalvar.setText("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        btnConsultar.setFont(principal.FrmLogin.fontePadrao);
        btnConsultar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/look.png"))); // NOI18N
        btnConsultar.setMnemonic('c');
        btnConsultar.setText("Consultar");
        btnConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarActionPerformed(evt);
            }
        });

        btnCancelar_Pes1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/return2.png"))); // NOI18N
        btnCancelar_Pes1.setMnemonic('l');
        btnCancelar_Pes1.setFont(principal.FrmLogin.fontePadrao);
        btnCancelar_Pes1.setText("Limpar");
        btnCancelar_Pes1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelar_Pes1ActionPerformed(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/delete.png"))); // NOI18N
        jButton1.setMnemonic('r');
        jButton1.setText("Remover");
        jButton1.setNextFocusableComponent(txtProduto);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pnDadosTinta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnBasesTinta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnConsultar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnCancelar_Pes1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)))
                .addGap(10, 10, 10))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnDadosTinta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnBasesTinta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnConsultar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnCancelar_Pes1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(15, 15, 15))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarActionPerformed
        if(idTinta != 0 && qryBaseTinta.getRow() <= 0){
            JOptionPane.showMessageDialog(this, 
                    "Você deve incluir bases na tinta antes de consultar", 
                    "Atenção", JOptionPane.INFORMATION_MESSAGE);
            btnConsultar1.requestFocus();
        }else{
            txtNome.requestFocus();

            // campos para combobox sendo texto visual e o nome campo do banco referente.
            LinkedHashMap<String, String> combo = new LinkedHashMap<>();
            combo.put("Nome", "nome");
            combo.put("Código Tinta", "cod_tinta");
            combo.put("Código","id");

            // titulos para as colunas da tabela, sendo texto visual e nome campo do banco referente.
            LinkedHashMap<String, String> titulo = new LinkedHashMap<>();
            titulo.put("CÓDIGO", "id");
            titulo.put("NOME", "nome");
            titulo.put("CÓD.TINTA", "cod_tinta");
            titulo.put("TIPO", "tipo");
            titulo.put("MONTADORA", "sigla_montadora");

            // campos que deseja deixar invisível, pode-se omitir.
            String[] invisivel = {"ano_inicial", "ano_final", "id_categoria_tinta", 
                                "id_tipo_tinta", "quantidade_producao",
                                "quantidade_minima", "sigla_unidade", "data_inclusao", "data_modificacao"};

            // tamanho das colunas visíveis, pode-se omitir.
            int[] tamanho = null;

            pesquisa.iFrmPesquisa produtos;
            produtos = new pesquisa.iFrmPesquisa(this,
                    "Pesquisa de Tintas",
                    principal.Principal.conexao.getConexao(),
                    qryTinta,
                    "id",
                    combo,
                    titulo,
                    "SELECT "
                        + "id, nome, cod_tinta, ano_inicial, ano_final, "
                        + "id_categoria_tinta, id_tipo_tinta, tipo, "
                        + "sigla_montadora, quantidade_producao, "
                        + "quantidade_minima, sigla_unidade, "
                        + "data_inclusao, data_modificacao "
                    + "FROM vw_tintas",
                    invisivel,
                    tamanho);


            principal.FrmPrincipal.Desktop.add(produtos);
            produtos.setVisible(true);
            
            pesquisaTinta = true;
        }
    }//GEN-LAST:event_btnConsultarActionPerformed

    private void btnConsultar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultar1ActionPerformed
        if(idTinta != 0){
            txtQuantidade.requestFocus();

            // campos para combobox sendo texto visual e o nome campo do banco referente.
            LinkedHashMap<String, String> combo = new LinkedHashMap<>();
            combo.put("Nome", "nome");
            combo.put("Código base", "codigo_fornecedor");
            combo.put("Código","id");

            // titulos para as colunas da tabela, sendo texto visual e nome campo do banco referente.
            LinkedHashMap<String, String> titulo = new LinkedHashMap<>();
            titulo.put("CÓDIGO", "id");
            titulo.put("NOME", "nome");
            titulo.put("CÓD.BASE", "codigo_fornecedor");

            // campos que deseja deixar invisível, pode-se omitir.
            String[] invisivel = {"unidade_producao"};

            // tamanho das colunas visíveis, pode-se omitir.
            int[] tamanho = null;

            pesquisa.iFrmPesquisa produtos;
            produtos = new pesquisa.iFrmPesquisa(this,
                    "Pesquisa de Bases de tintas",
                    principal.Principal.conexao.getConexao(),
                    qryTemp,
                    "id",
                    combo,
                    titulo,
                    "SELECT "
                        + "id, nome, codigo_fornecedor, unidade_producao "
                    + "FROM vw_produtos_base_tinta",
                    invisivel,
                    tamanho);


            principal.FrmPrincipal.Desktop.add(produtos);
            produtos.setVisible(true);
            
            pesquisaBase = true;
        }else{
            JOptionPane.showMessageDialog(this, 
                    "Consulta ou cadastre uma tinta\n"
                    + "para consultar uma base de tinta", "Atenção", JOptionPane.INFORMATION_MESSAGE);
            txtNome.requestFocus();
        }
    }//GEN-LAST:event_btnConsultar1ActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        if(FrmLogin.usuario.verificarPermissao(this, 1)){

            if(txtNome.getText().isEmpty()){
                JOptionPane.showMessageDialog(this, "Informe um nome", "Atenção", JOptionPane.INFORMATION_MESSAGE);
                txtNome.requestFocus();
            }else if(txtCodTinta.getText().isEmpty()){
                JOptionPane.showMessageDialog(this, "Informe um código", "Atenção", JOptionPane.INFORMATION_MESSAGE);
                txtCodTinta.requestFocus();
            }else if(!txtInicial.getText().isEmpty() && 
                    !txtInicial.getText().matches("^[0-9]{4}$")){
                JOptionPane.showMessageDialog(this, "Ano inicial deve ser um número inteiro de 4 casas", 
                        "Atenção", JOptionPane.INFORMATION_MESSAGE);
                txtInicial.requestFocus();
            }else if(!txtFinal.getText().isEmpty() && 
                    !txtFinal.getText().matches("^[0-9]{4}$")){
                JOptionPane.showMessageDialog(this, "Ano final deve ser um número inteiro de 4 casas", 
                        "Atenção", JOptionPane.INFORMATION_MESSAGE);
                txtFinal.requestFocus();
            }else if(!txtFinal.getText().isEmpty() && 
                    Integer.valueOf(txtFinal.getText()) < Integer.valueOf(txtInicial.getText())){
                JOptionPane.showMessageDialog(this, "Ano final deve ser maior ou igual ao ano inicial", 
                        "Atenção", JOptionPane.INFORMATION_MESSAGE);
                txtFinal.requestFocus();
            }else if(cbxCategTinta.getSelectedIndex() == 0){
                JOptionPane.showMessageDialog(this, "Informe uma categoria",
                        "Atenção", JOptionPane.INFORMATION_MESSAGE);
                cbxCategTinta.requestFocus();
            }else if(cbxMontadora.getSelectedIndex() == 0){
                JOptionPane.showMessageDialog(this, "Informe uma montadora",
                        "Atenção", JOptionPane.INFORMATION_MESSAGE);
                cbxMontadora.requestFocus();
            }else if(cbxTipoTinta.getSelectedIndex() == 0){
                JOptionPane.showMessageDialog(this, "Informe um tipo de tinta",
                        "Atenção", JOptionPane.INFORMATION_MESSAGE);
                cbxTipoTinta.requestFocus();
            }else if(Double.valueOf(txtProducao.getValue().toString()) == 0.0){
                JOptionPane.showMessageDialog(this, "Informe uma quantidade de produção maior que zero",
                        "Atenção", JOptionPane.INFORMATION_MESSAGE);
                txtProducao.requestFocus();
            }else if(cbxUnidade.getSelectedIndex() == 0){
                JOptionPane.showMessageDialog(this, "Informe uma unidade",
                        "Atenção", JOptionPane.INFORMATION_MESSAGE);
                cbxUnidade.requestFocus();
            }else{
                if(alteracaoTinta){
                    updTransacao.setSQL(String.format(
                        "UPDATE tintas SET "
                            + "nome='%s', "
                            + "cod_tinta='%s', "
                            + "ano_inicial=%s, "
                            + "ano_final=%s, "
                            + "id_categoria_tinta='%s', "
                            + "id_tipo_tinta='%s', "
                            + "sigla_montadora='%s', "
                            + "quantidade_producao='%s', "
                            + "quantidade_minima='%s', "
                            + "sigla_unidade='%s' "
                        + "WHERE id = '%s'",
                            txtNome.getText(),
                            txtCodTinta.getText(),
                            txtInicial.getText().isEmpty()?"NULL":"'"+txtInicial.getText()+"'",
                            txtFinal.getText().isEmpty()?"NULL":"'"+txtFinal.getText()+"'",
                            cbxCategTinta.getKeyListValue(),
                            cbxTipoTinta.getKeyListValue(),
                            cbxMontadora.getKeyListValue(),
                            txtProducao.getValue(),
                            txtMinimo.getValue(),
                            cbxUnidade.getKeyListValue(),
                            idTinta) );

                    updTransacao.execUpdate();
                    
                    // registro de log
                    FrmLogin.log.gravar(FrmLogin.usuario.getNomeUsuario(),
                            this, String.valueOf(idTinta), 2);
                }else{
                    updTransacao.setSQL(String.format(
                        "INSERT INTO tintas("
                            + "nome, "
                            + "cod_tinta, "
                            + "ano_inicial, "
                            + "ano_final, "
                            + "id_categoria_tinta, "
                            + "id_tipo_tinta, "
                            + "sigla_montadora, "
                            + "quantidade_producao, "
                            + "quantidade_minima, "
                            + "sigla_unidade) "
                        + "VALUES "
                            + "('%s','%s',%s,%s,'%s','%s','%s','%s','%s','%s')",
                            txtNome.getText(),
                            txtCodTinta.getText(),
                            txtInicial.getText().isEmpty()?"NULL":"'"+txtInicial.getText()+"'",
                            txtFinal.getText().isEmpty()?"NULL":"'"+txtFinal.getText()+"'",
                            cbxCategTinta.getKeyListValue(),
                            cbxTipoTinta.getKeyListValue(),
                            cbxMontadora.getKeyListValue(),
                            txtProducao.getValue(),
                            txtMinimo.getValue(),
                            cbxUnidade.getKeyListValue() ) );

                    // executando a transação(insert), recuperando a chave inserida e
                    // atribuindo ao txtID_DT.
                    updTransacao.execUpdate();

                    qryTemp.setSQL("SELECT LAST_INSERT_ID()");
                    qryTemp.execQuery();
                    idTinta = qryTemp.getCurrentFieldValueAsInteger(1);

                    txtID_DT.setText(String.valueOf(idTinta));
                    
                    alteracaoTinta = true;
                    
                    // registro de log
                    FrmLogin.log.gravar(FrmLogin.usuario.getNomeUsuario(),
                           this, String.valueOf(idTinta), 1);
                }
            }
        }
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnSalvar_BTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvar_BTActionPerformed
        if(FrmLogin.usuario.verificarPermissao(this, 1)){

            if(idTinta != 0 && idProduto != 0){
                if(Double.valueOf(txtQuantidade.getValue().toString()) == 0){
                    JOptionPane.showMessageDialog(this, "Quantidade deve ser maior que zero", 
                        "Atenção", JOptionPane.INFORMATION_MESSAGE);
                    txtQuantidade.requestFocus();
                }else{
                    String sql = "";
                    if(alteracaoBase){
                        sql = String.format(
                            "UPDATE bases_tinta SET "
                                + "quantidade='%s' "
                            + "WHERE id='%s'",
                                txtQuantidade.getValue(),
                                idBase);

                        enviarTransacao(sql);

                    }else{
                        sql = String.format(
                            "INSERT INTO bases_tinta("
                                + "id_tinta, "
                                + "id_produto, "
                                + "cod_base, "
                                + "quantidade, "
                                + "sigla_unidade) "
                            + "VALUES ("
                                + "'%s','%s','%s','%s','%s')",
                                idTinta,
                                idProduto,
                                txtCodBase.getText(),
                                txtQuantidade.getValue(),
                                qryUnidadeBase.getCurrentFieldValueAsString("sigla") );

                        enviarTransacao(sql);
                    }

                    limparBase();
    //                carregarTbBaseTinta(idTinta);
                }
            }else{
                JOptionPane.showMessageDialog(this, "Consulte uma produto base tinta");
            }
        }
    }//GEN-LAST:event_btnSalvar_BTActionPerformed

    private void btnCancelar_Pes1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelar_Pes1ActionPerformed
        if(idTinta != 0 && qryBaseTinta.getRow() <= 0){
            JOptionPane.showMessageDialog(this, 
                    "Você deve incluir bases na tinta antes de limpar", 
                    "Atenção", JOptionPane.INFORMATION_MESSAGE);
            btnConsultar1.requestFocus();
        }else{
            limpar();
        }
    }//GEN-LAST:event_btnCancelar_Pes1ActionPerformed

    private void btnCancelar_PesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelar_PesActionPerformed
        limparBase();
    }//GEN-LAST:event_btnCancelar_PesActionPerformed

    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
        if(idTinta != 0 && qryBaseTinta.getRow() <= 0){
            JOptionPane.showMessageDialog(this, 
                    "Você deve incluir bases na tinta antes de fechar", 
                    "Atenção", JOptionPane.INFORMATION_MESSAGE);
            btnConsultar1.requestFocus();
        }else{
            dispose();
        }
    }//GEN-LAST:event_formInternalFrameClosing

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if(FrmLogin.usuario.verificarPermissao(this, 2)){

            if(alteracaoTinta){
                if(sistema.Mensagem.showConfirmDialog(this,
                        "Deseja realmente excluir esta tinta?", "Confirmação") == 0){

                    String sql = String.format("DELETE FROM tintas WHERE id = '%s'", idTinta);

                    enviarTransacao(sql);
                    
                    // registro de log
                    FrmLogin.log.gravar(FrmLogin.usuario.getNomeUsuario(),
                                this, String.valueOf(idTinta), 3);

                    limpar();
                }
            }else{
                JOptionPane.showMessageDialog(this, 
                        "Consulte um tinta para excluir", "Atenção", 
                        JOptionPane.INFORMATION_MESSAGE);

                btnConsultar.requestFocus();
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void tbBaseTintaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbBaseTintaMouseClicked
        if(evt.getClickCount() == 2){
            idBase = qryBaseTinta.getCurrentFieldValueAsInteger("id");
            idProduto = qryBaseTinta.getCurrentFieldValueAsInteger("id_produto");
            
            txtID_BT.setText(String.valueOf(idBase));
            txtProduto.setText(qryBaseTinta.getCurrentFieldValueAsString("nome"));
            txtCodBase.setText(qryBaseTinta.getCurrentFieldValueAsString("cod_base"));
            txtQuantidade.setValue(qryBaseTinta.getCurrentFieldValueAsDouble("quantidade"));
            qryUnidadeBase.locate("sigla",
                    qryBaseTinta.getCurrentFieldValueAsString("sigla_unidade"), true);
            txtInc1.setText(qryBaseTinta.getCurrentFieldValueAsString("data_inclusao_base"));
            txtMod1.setText(qryBaseTinta.getCurrentFieldValueAsString("data_modificacao_base"));
            
            txtQuantidade.requestFocus();
            
            alteracaoBase = true;
        }
    }//GEN-LAST:event_tbBaseTintaMouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if(FrmLogin.usuario.verificarPermissao(this, 2)){

            if(alteracaoTinta){
                if(sistema.Mensagem.showConfirmDialog(this,
                        "Deseja realmente excluir esta base de tinta?", "Confirmação") == 0){

                    String sql = String.format("DELETE FROM bases_tinta WHERE id = '%s'", idBase);

                    enviarTransacao(sql);

                    limparBase();
                }
            }else{
                JOptionPane.showMessageDialog(this, 
                        "Consulte um base de tinta para excluir", "Atenção", 
                        JOptionPane.INFORMATION_MESSAGE);

                btnConsultar1.requestFocus();
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private lib.jdb.control.jdbbuttoncancel.JDBButtonCancel btnCancelar_Pes;
    private lib.jdb.control.jdbbuttoncancel.JDBButtonCancel btnCancelar_Pes1;
    private javax.swing.JButton btnConsultar;
    private javax.swing.JButton btnConsultar1;
    private lib.jdb.control.jdbbuttonsave.JDBButtonSave btnSalvar;
    private lib.jdb.control.jdbbuttonsave.JDBButtonSave btnSalvar_BT;
    private lib.jdb.control.jdblistcombobox.JDBListComboBox cbxCategTinta;
    private lib.jdb.control.jdblistcombobox.JDBListComboBox cbxMontadora;
    private lib.jdb.control.jdblistcombobox.JDBListComboBox cbxTipoTinta;
    private lib.jdb.control.jdblistcombobox.JDBListComboBox cbxUnidade;
    private lib.jdb.control.jdblistcombobox.JDBListComboBox cbxUnidadeBase;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private lib.jdb.control.jdbcalendar.JDBCalendar jDBCalendar1;
    private javax.swing.JLabel lblCatTinta;
    private javax.swing.JLabel lblCodBase;
    private javax.swing.JLabel lblCodTinta;
    private javax.swing.JLabel lblFinal;
    private javax.swing.JLabel lblInc;
    private javax.swing.JLabel lblInc1;
    private javax.swing.JLabel lblInicial;
    private javax.swing.JLabel lblMinima;
    private javax.swing.JLabel lblMod;
    private javax.swing.JLabel lblMod1;
    private javax.swing.JLabel lblMont;
    private javax.swing.JLabel lblNome;
    private javax.swing.JLabel lblProducao;
    private javax.swing.JLabel lblProduto;
    private javax.swing.JLabel lblQuantidade;
    private javax.swing.JLabel lblTipoTinta;
    private javax.swing.JLabel lblUnidade_BT;
    private javax.swing.JLabel lblUnidade_DT;
    private javax.swing.JPanel pnAno;
    private javax.swing.JPanel pnBasesTinta;
    private javax.swing.JPanel pnCodigoDT;
    private javax.swing.JPanel pnCodigo_BT;
    private javax.swing.JPanel pnDadosTinta;
    private javax.swing.JPanel pnDatas;
    private javax.swing.JPanel pnDatas1;
    private javax.swing.JPanel pnQuantidade;
    private javax.swing.JScrollPane scrlBaseTinta;
    private lib.jdb.control.jdbtable.JDBTable tbBaseTinta;
    private lib.jdb.control.jdbtextfield.JDBTextField txtCodBase;
    private lib.jdb.control.jdbtextfield.JDBTextField txtCodTinta;
    private lib.jdb.control.jdbtextfield.JDBTextField txtFinal;
    private lib.jdb.control.jdbtextfield.JDBTextField txtID_BT;
    private lib.jdb.control.jdbtextfield.JDBTextField txtID_DT;
    private lib.jdb.control.jdbtextfield.JDBTextField txtInc;
    private lib.jdb.control.jdbtextfield.JDBTextField txtInc1;
    private lib.jdb.control.jdbtextfield.JDBTextField txtInicial;
    private javax.swing.JFormattedTextField txtMinimo;
    private lib.jdb.control.jdbtextfield.JDBTextField txtMod;
    private lib.jdb.control.jdbtextfield.JDBTextField txtMod1;
    private lib.jdb.control.jdbtextfield.JDBTextField txtNome;
    private javax.swing.JFormattedTextField txtProducao;
    private lib.jdb.control.jdbtextfield.JDBTextField txtProduto;
    private javax.swing.JFormattedTextField txtQuantidade;
    // End of variables declaration//GEN-END:variables
    
    public void atribuirCampos(){
        if(pesquisaTinta){
            alteracaoTinta = true;

            idTinta = qryTinta.getCurrentFieldValueAsInteger("id");

            txtID_DT.setText(String.valueOf(idTinta));
            txtNome.setText(qryTinta.getCurrentFieldValueAsString("nome"));
            txtCodTinta.setText(qryTinta.getCurrentFieldValueAsString("cod_tinta"));
            txtInicial.setText(qryTinta.getCurrentFieldValueAsString("ano_inicial"));
            txtFinal.setText(qryTinta.getCurrentFieldValueAsString("ano_final"));

            qryCategTinta.locate("id", 
                    qryTinta.getCurrentFieldValueAsString("id_categoria_tinta"), true);
            qryMontadora.locate("sigla", 
                    qryTinta.getCurrentFieldValueAsString("sigla_montadora"), true);
            qryTipoTinta.locate("id", 
                    qryTinta.getCurrentFieldValueAsString("id_tipo_tinta"), true);

            txtProducao.setValue(qryTinta.getCurrentFieldValueAsDouble("quantidade_producao"));
            txtMinimo.setValue(qryTinta.getCurrentFieldValueAsDouble("quantidade_minima"));

            qryUnidade.locate("sigla", 
                    qryTinta.getCurrentFieldValueAsString("sigla_unidade"), true);

            txtInc.setText(qryTinta.getCurrentFieldValueAsString("data_inclusao"));
            txtMod.setText(qryTinta.getCurrentFieldValueAsString("data_modificacao"));
            
            // carregamento da query das bases da tinta
            carregarTbBaseTinta(idTinta);            
            
            pesquisaTinta = false;
            
        }else if(pesquisaBase){
            idProduto = qryTemp.getCurrentFieldValueAsInteger("id");
            txtProduto.setText(qryTemp.getCurrentFieldValueAsString("nome"));
            txtCodBase.setText(qryTemp.getCurrentFieldValueAsString("codigo_fornecedor"));
            
            qryUnidadeBase.locate("sigla", 
                    qryTemp.getCurrentFieldValueAsString("unidade_producao"), true);
            
            pesquisaBase = false;
            
        }
        
    }
    
    private void limpar(){
        qryCategTinta.execQuery();
        qryMontadora.execQuery();
        qryTipoTinta.execQuery();
        qryUnidade.execQuery();
        
        alteracaoTinta = false;
        pesquisaTinta = false;
        pesquisaBase = false;
        
        idTinta = 0;
        
        txtID_DT.setText("");
        txtNome.setText("");
        txtCodTinta.setText("");
        txtInicial.setText("");
        txtFinal.setText("");
        
        cbxCategTinta.setSelectedIndex(0);
        cbxMontadora.setSelectedIndex(0);
        cbxTipoTinta.setSelectedIndex(0);
        cbxUnidade.setSelectedIndex(0);
        
        txtProducao.setValue(0.0);
        txtMinimo.setValue(0.0);
        
        txtInc.setText("");
        txtMod.setText("");
        
        limparBase();
        
        txtNome.requestFocus();
    }
    
    private void limparBase(){
        qryUnidadeBase.execQuery();
        
        idBase = 0;
        idProduto = 0;
        alteracaoBase = false;
        
        carregarTbBaseTinta(idTinta);
        
        txtID_BT.setText("");
        txtProduto.setText("");
        txtCodBase.setText("");
        
        txtQuantidade.setValue(0.0);
        
        cbxUnidadeBase.setSelectedIndex(0);
        
        txtInc1.setText("");
        txtMod1.setText("");   
        
        btnSalvar_BT.requestFocus();
    }
    
    private void carregarTbBaseTinta(int idTinta){
        qryBaseTinta.setSQL(
                "SELECT "
                    + "id, id_tinta, id_produto, nome, cod_base, quantidade, "
                    + "sigla_unidade, data_inclusao_base, data_modificacao_base "
                + "FROM vw_bases_tinta "
                + "WHERE id_tinta = " + idTinta);
        
        tbBaseTinta.setEditable(false);
        
        tbBaseTinta.setJDBQuery(qryBaseTinta);
        tbBaseTinta.setInvisibleFields("id id_tinta id_produto data_inclusao_base data_modificacao_base");
        
        tbBaseTinta.setFieldsTitle("nome", "PRODUTO");
        tbBaseTinta.setFieldsTitle("cod_base", "CÓD.BASE");
        tbBaseTinta.setFieldsTitle("quantidade", "QUANT.");
        tbBaseTinta.setFieldsTitle("sigla_unidade", "UN.");
        
        qryBaseTinta.execQuery();
    }
    
    private void enviarTransacao(String sql){
        updTransacao.setSQL(sql);
        updTransacao.setShowMessageOnError(false);
        
        // Se a transação retornar erro:
        if(!updTransacao.execUpdate()){
            //1451: Violação de foreign key, contém relacionamento
            if(updTransacao.getErrorCode() == 1451){
                JOptionPane.showMessageDialog(this, 
                        "Tinta com relacionamento, não pode ser excluída", "Atenção", 
                        JOptionPane.INFORMATION_MESSAGE);                
            }
        }
    }
}

