/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package estoque;

import java.util.LinkedHashMap;
import javax.swing.JOptionPane;
import lib.jdb.jdbquery.JDBQuery;
import lib.jdb.jdbupdate.JDBUpdate;
import principal.FrmLogin;

/**
 *
 * @author patri
 */
public class iFrmCadMarca extends javax.swing.JInternalFrame {
    private JDBQuery qryMarca, qryFornecedor;
    private boolean alteracao = false;
    private String id;
    /**
     * Creates new form iFrmCadCategoriaProd
     */
    public iFrmCadMarca() {
        qryMarca = new JDBQuery();
        qryMarca.setJDBConnection(principal.Principal.conexao.getConexao());
        
        qryFornecedor = new JDBQuery();
        qryFornecedor.setJDBConnection(principal.Principal.conexao.getConexao());
        qryFornecedor.setSQL("SELECT doc_principal, nome FROM pessoas WHERE fornecedor = TRUE");
        qryFornecedor.setConcurUpdatable(false);
        
        initComponents();
        
        qryFornecedor.execQuery();
        cbxFornecedor.setSelectedIndex(0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Painel = new javax.swing.JPanel();
        btnSalvar = new lib.jdb.control.jdbbuttonsave.JDBButtonSave();
        btnCancelar = new lib.jdb.control.jdbbuttoncancel.JDBButtonCancel();
        lblDesc = new javax.swing.JLabel();
        txtDesc = new lib.jdb.control.jdbtextfield.JDBTextField();
        pnCodigo = new javax.swing.JPanel();
        txtID = new lib.jdb.control.jdbtextfield.JDBTextField();
        btnConsultar = new javax.swing.JButton();
        btnRemover = new lib.jdb.control.jdbbuttondelete.JDBButtonDelete();
        lbFornecedor = new javax.swing.JLabel();
        pnDatas = new javax.swing.JPanel();
        lblInc = new javax.swing.JLabel();
        txtInc = new lib.jdb.control.jdbtextfield.JDBTextField();
        lblMod = new javax.swing.JLabel();
        txtMod = new lib.jdb.control.jdbtextfield.JDBTextField();
        cbxFornecedor = new lib.jdb.control.jdblistcombobox.JDBListComboBox();

        setClosable(true);
        setIconifiable(true);
        setTitle("Cadastro de Marcas");
        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                formFocusGained(evt);
            }
        });

        Painel.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, new java.awt.Color(204, 204, 204), new java.awt.Color(153, 153, 153)));

        btnSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/save.png"))); // NOI18N
        btnSalvar.setMnemonic('s');
        btnSalvar.setFont(principal.FrmLogin.fontePadrao);
        btnSalvar.setText("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/return2.png"))); // NOI18N
        btnCancelar.setMnemonic('l');
        btnCancelar.setFont(principal.FrmLogin.fontePadrao);
        btnCancelar.setText("Limpar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        lblDesc.setFont(principal.FrmLogin.fontePadrao);
        lblDesc.setText("Descrição:");

        txtDesc.setFont(principal.FrmLogin.fontePadrao);

        pnCodigo.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, new java.awt.Color(204, 204, 204), new java.awt.Color(153, 153, 153)), "Código", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial", 1, 12), new java.awt.Color(102, 102, 102))); // NOI18N

        txtID.setFocusable(false);
        txtID.setFont(principal.FrmLogin.fontePadrao);

        javax.swing.GroupLayout pnCodigoLayout = new javax.swing.GroupLayout(pnCodigo);
        pnCodigo.setLayout(pnCodigoLayout);
        pnCodigoLayout.setHorizontalGroup(
            pnCodigoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnCodigoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtID, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnCodigoLayout.setVerticalGroup(
            pnCodigoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnCodigoLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5))
        );

        btnConsultar.setFont(principal.FrmLogin.fontePadrao);
        btnConsultar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/look.png"))); // NOI18N
        btnConsultar.setMnemonic('c');
        btnConsultar.setText("Consultar");
        btnConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarActionPerformed(evt);
            }
        });

        btnRemover.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/delete.png"))); // NOI18N
        btnRemover.setMnemonic('r');
        btnRemover.setText("Remover");
        btnRemover.setFont(principal.FrmLogin.fontePadrao);
        btnRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverActionPerformed(evt);
            }
        });

        lbFornecedor.setFont(principal.FrmLogin.fontePadrao);
        lbFornecedor.setText("Fornecedor:");

        pnDatas.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, new java.awt.Color(204, 204, 204), new java.awt.Color(153, 153, 153)), "Datas", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial", 1, 12), new java.awt.Color(102, 102, 102))); // NOI18N

        lblInc.setFont(principal.FrmLogin.fontePadrao);
        lblInc.setText("Inclusão:");

        txtInc.setFocusable(false);

        lblMod.setFont(principal.FrmLogin.fontePadrao);
        lblMod.setText("Modificação:");

        txtMod.setFocusable(false);

        javax.swing.GroupLayout pnDatasLayout = new javax.swing.GroupLayout(pnDatas);
        pnDatas.setLayout(pnDatasLayout);
        pnDatasLayout.setHorizontalGroup(
            pnDatasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnDatasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnDatasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblInc)
                    .addComponent(txtInc, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnDatasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnDatasLayout.createSequentialGroup()
                        .addComponent(lblMod)
                        .addGap(14, 14, 14))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnDatasLayout.createSequentialGroup()
                        .addComponent(txtMod, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        pnDatasLayout.setVerticalGroup(
            pnDatasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnDatasLayout.createSequentialGroup()
                .addGroup(pnDatasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnDatasLayout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(txtMod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnDatasLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(pnDatasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblInc)
                            .addComponent(lblMod))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtInc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(10, 10, 10))
        );

        cbxFornecedor.setJDBListQuery(qryFornecedor);
        cbxFornecedor.setInvisibleFields("doc_principal");
        cbxFornecedor.setKeyListField("doc_principal");
        cbxFornecedor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cbxFornecedorMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout PainelLayout = new javax.swing.GroupLayout(Painel);
        Painel.setLayout(PainelLayout);
        PainelLayout.setHorizontalGroup(
            PainelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(PainelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblDesc)
                    .addGroup(PainelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(txtDesc, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(pnDatas, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, PainelLayout.createSequentialGroup()
                            .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(btnConsultar)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(btnRemover, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(lbFornecedor, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(pnCodigo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(10, 12, Short.MAX_VALUE))
            .addGroup(PainelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cbxFornecedor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        PainelLayout.setVerticalGroup(
            PainelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PainelLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(pnCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblDesc)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtDesc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbFornecedor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbxFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnDatas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(10, 10, 10)
                .addGroup(PainelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnConsultar)
                    .addComponent(btnRemover, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(Painel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(Painel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(15, 15, 15))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarActionPerformed
        txtDesc.requestFocus();
        
        // campos para combobox sendo texto visual e o nome campo do banco referente.
        LinkedHashMap<String, String> combo = new LinkedHashMap<>();
        combo.put("Descrição", "descricao");
        combo.put("Fornecedor", "nome_fornecedor");
        combo.put("Código","id");
        
        // titulos para as colunas da tabela, sendo texto visual e nome campo do banco referente.
        LinkedHashMap<String, String> titulo = new LinkedHashMap<>();
        titulo.put("DESCRIÇÃO", "descricao");
        titulo.put("FORCENEDOR", "nome_fornecedor");
        titulo.put("CÓDIGO", "id");

        // campos que deseja deixar invisível, pode-se omitir.
        String[] invisivel = {"doc_principal_fornecedor" ,"data_inclusao", "data_modificacao"};

        // tamanho das colunas visíveis, pode-se omitir.
//        int[] tamanho = {200, 400};
        
        pesquisa.iFrmPesquisa marcas;
        marcas = new pesquisa.iFrmPesquisa(this,
                "Pesquisa de Marcas",
                principal.Principal.conexao.getConexao(),
                qryMarca,
                "id",
                combo,
                titulo,
                "SELECT id, descricao, doc_principal_fornecedor, "
                        + "nome_fornecedor, data_inclusao, data_modificacao "
                        + "FROM vw_marcas",
                invisivel,
                null);

        
        principal.FrmPrincipal.Desktop.add(marcas);
        marcas.setVisible(true);                
    }//GEN-LAST:event_btnConsultarActionPerformed

    private void cbxFornecedorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbxFornecedorMouseClicked
//        qryFornecedor.execQuery();
    }//GEN-LAST:event_cbxFornecedorMouseClicked

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        limpar();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        //permissão de usuário
        if(FrmLogin.usuario.verificarPermissao(this, 1)){

            if(txtDesc.getText().isEmpty()){
                JOptionPane.showMessageDialog(this, 
                        "Informe uma descrição", "Atenção", 
                        JOptionPane.INFORMATION_MESSAGE);
                txtDesc.requestFocus();
            }else if(txtDesc.getText().length() > 30){
                JOptionPane.showMessageDialog(this, 
                        "Descrição deve ter no máximo 30 caracteres", "Atenção", 
                        JOptionPane.INFORMATION_MESSAGE);
                txtDesc.requestFocus();
            }else if(cbxFornecedor.getSelectedIndex() == 0){
                JOptionPane.showMessageDialog(this, 
                        "Selecione um fornecedor", "Atenção", 
                        JOptionPane.INFORMATION_MESSAGE);
                cbxFornecedor.requestFocus();
            }else{
                String sql;
                if(alteracao){
                    if(sistema.Mensagem.showConfirmDialog(this,
                        "Deseja realmente alterar esta marca?", "Confirmação") == 0){

                        sql = String.format(
                              "UPDATE marcas "
                              + "SET descricao='%s' , doc_principal_fornecedor = '%s' "
                              + "WHERE id = '%s'", 
                              txtDesc.getText(),
                              qryFornecedor.getCurrentFieldValueAsString("doc_principal"),
                              id);

                        if(enviarTransacao(sql)){
                        
                            // registro de log
                            FrmLogin.log.gravar(FrmLogin.usuario.getNomeUsuario(), 
                                    this, id, 2);
                        }
                    }
                }else{
                    sql = String.format(
                          "INSERT INTO marcas(" +
                          "descricao, doc_principal_fornecedor)" +
                          "VALUES('%s', '%s')",
                          txtDesc.getText(),
                          qryFornecedor.getCurrentFieldValueAsString("doc_principal"));

                    if(enviarTransacao(sql)){
                    
                        JDBQuery temp = new JDBQuery();
                        temp.setJDBConnection(principal.Principal.conexao.getConexao());
                        temp.setSQL("SELECT LAST_INSERT_ID()");
                        temp.execQuery();
                        String id = temp.getCurrentFieldValueAsString(1);

                        // registro de log
                        FrmLogin.log.gravar(FrmLogin.usuario.getNomeUsuario(), 
                                this, id, 1);
                    }
                }

                limpar();
            }
        }
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void formFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusGained
        qryFornecedor.execQuery();
    }//GEN-LAST:event_formFocusGained

    private void btnRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverActionPerformed
        if(FrmLogin.usuario.verificarPermissao(this, 2)){

            if(alteracao){
                if(sistema.Mensagem.showConfirmDialog(this,
                        "Deseja realmente excluir esta marca?", "Confirmação") == 0){

                    String sql = String.format("DELETE FROM marcas WHERE id = '%s'", id);

                    if(enviarTransacao(sql)){
                    
                        // registro de log
                        FrmLogin.log.gravar(FrmLogin.usuario.getNomeUsuario(),
                                    this, id, 3);
                    }
                    
                    limpar();
                }
            }else{
                JOptionPane.showMessageDialog(this, 
                        "Consulte uma marca para excluir", "Atenção", 
                        JOptionPane.INFORMATION_MESSAGE);

                btnConsultar.requestFocus();
            }
        }
    }//GEN-LAST:event_btnRemoverActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Painel;
    private lib.jdb.control.jdbbuttoncancel.JDBButtonCancel btnCancelar;
    private javax.swing.JButton btnConsultar;
    private lib.jdb.control.jdbbuttondelete.JDBButtonDelete btnRemover;
    private lib.jdb.control.jdbbuttonsave.JDBButtonSave btnSalvar;
    private lib.jdb.control.jdblistcombobox.JDBListComboBox cbxFornecedor;
    private javax.swing.JLabel lbFornecedor;
    private javax.swing.JLabel lblDesc;
    private javax.swing.JLabel lblInc;
    private javax.swing.JLabel lblMod;
    private javax.swing.JPanel pnCodigo;
    private javax.swing.JPanel pnDatas;
    private lib.jdb.control.jdbtextfield.JDBTextField txtDesc;
    private lib.jdb.control.jdbtextfield.JDBTextField txtID;
    private lib.jdb.control.jdbtextfield.JDBTextField txtInc;
    private lib.jdb.control.jdbtextfield.JDBTextField txtMod;
    // End of variables declaration//GEN-END:variables
    
    public void atribuirCampos(){
        String id, descricao, inclusao, modificacao;
        id = qryMarca.getCurrentFieldValueAsString("id");
        descricao = qryMarca.getCurrentFieldValueAsString("descricao");
        inclusao = qryMarca.getCurrentFieldValueAsString("data_inclusao");
        modificacao = qryMarca.getCurrentFieldValueAsString("data_modificacao");
        
        txtID.setText(id);
        txtDesc.setText(descricao);
        txtInc.setText(inclusao);
        txtMod.setText(modificacao);
        
        int posicao = qryFornecedor.locate("doc_principal", 
                qryMarca.getCurrentFieldValueAsString("doc_principal_fornecedor"), 
                true);
        cbxFornecedor.setSelectedIndex(posicao);
        
        alteracao = true;
        this.id = id;
    }
    
    private void limpar(){
        txtID.setText("");
        txtDesc.setText("");
        txtInc.setText("");
        txtMod.setText("");
        
        qryFornecedor.execQuery();
        cbxFornecedor.setSelectedIndex(0);
        
        alteracao = false;
        id = "";
        
        txtDesc.requestFocus();
    }
    
    private boolean enviarTransacao(String sql){
        JDBUpdate transacao = new JDBUpdate();
        transacao.setJDBConnection(principal.Principal.conexao.getConexao());

        transacao.setSQL(sql);
        transacao.setShowMessageOnError(false);
        
        boolean concluido = transacao.execUpdate();
        // Se a transação retornar erro:
        if(!concluido){
            //1451: Violação de foreign key, contém relacionamento
            if(transacao.getErrorCode() == 1451){
                JOptionPane.showMessageDialog(this, 
                        "Marca com relacionamento, não pode ser excluída", "Atenção", 
                        JOptionPane.INFORMATION_MESSAGE);                
            }
        }
        
        return concluido;
    }

}
