/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package financeiro;

import java.text.DecimalFormat;
import java.util.LinkedHashMap;
import javax.swing.JOptionPane;
import javax.swing.text.DefaultFormatterFactory;
import javax.swing.text.NumberFormatter;
import lib.jdb.jdbquery.JDBQuery;
import lib.jdb.jdbupdate.JDBUpdate;
import principal.FrmLogin;

/**
 *
 * @author patri
 */
public class iFrmChequeCartao extends javax.swing.JInternalFrame {
    JDBQuery qryChequeCartao, qryLancChequeCartao, qryCaixa;
    private int idControleChCt, idLancContrChCt, idCaixa;
    boolean pesquisarControle, pesquisarCaixa;
    /**
     * Creates new form iFrmChequeCartao
     */
    public iFrmChequeCartao() {
        
        qryChequeCartao = new JDBQuery();
        qryLancChequeCartao = new JDBQuery();
        qryCaixa = new JDBQuery();
        
        JDBQuery[] qry = {qryChequeCartao, qryLancChequeCartao, qryCaixa}; 
        
        for(JDBQuery q: qry){
            q.setJDBConnection(principal.Principal.conexao.getConexao());
            q.setConcurUpdatable(false);
            q.setLanguage("pt");
            q.setDecimalFormat("0.00");
            q.setTimeStampFormat("dd/MM/yyyy HH:mm:ss");
            q.setDateFormat("dd/MM/yyyy");
        }
        
        initComponents();
        
        tbChequeCartao.setJDBQuery(qryLancChequeCartao);
        tbChequeCartao.setEditable(false);
        tbChequeCartao.setFieldsTitle("id", "CÓDIGO");
        tbChequeCartao.setFieldsTitle("valor_parcela", "VALOR");
        tbChequeCartao.setFieldsTitle("data_vencimento", "VENCIMENTO");
        tbChequeCartao.setFieldsTitle("data_pagamento", "PAGAMENTO");
        tbChequeCartao.setInvisibleFields("numero_parcela id_controle_cheque_cartao "
                + "data_inclusao data_modificacao");
        
        DecimalFormat decimal = new DecimalFormat("######0.00");        
        NumberFormatter numFormatter = new NumberFormatter(decimal);
        numFormatter.setFormat(decimal);
        numFormatter.setAllowsInvalid(false);
        DefaultFormatterFactory dfFactory = new DefaultFormatterFactory(numFormatter);
        
        txtValor.setFormatterFactory(dfFactory);
        txtValorTotal.setFormatterFactory(dfFactory);
        
        limpar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Painel = new javax.swing.JPanel();
        scrlChequeCartao = new javax.swing.JScrollPane();
        tbChequeCartao = new lib.jdb.control.jdbtable.JDBTable();
        pnCaixa = new javax.swing.JPanel();
        pnCodigo = new javax.swing.JPanel();
        txtIdLanc = new lib.jdb.control.jdbtextfield.JDBTextField();
        lblDataVenc = new javax.swing.JLabel();
        lblDataPag = new javax.swing.JLabel();
        lblParcela = new javax.swing.JLabel();
        txtParcela = new lib.jdb.control.jdbtextfield.JDBTextField();
        lblDe = new javax.swing.JLabel();
        txtParcelaTotal = new lib.jdb.control.jdbtextfield.JDBTextField();
        lblValor = new javax.swing.JLabel();
        btnPagar = new lib.jdb.control.jdbbuttonsave.JDBButtonSave();
        btnCancelar = new lib.jdb.control.jdbbuttoncancel.JDBButtonCancel();
        txtDataVenc = new javax.swing.JTextField();
        txtDataPgto = new javax.swing.JTextField();
        txtValor = new javax.swing.JFormattedTextField();
        txtCaixa = new javax.swing.JTextField();
        btnConsultarCaixa = new javax.swing.JButton();
        lblValor1 = new javax.swing.JLabel();
        btnConsultar = new javax.swing.JButton();
        txtNomePessoa = new javax.swing.JTextField();
        pnCodigo1 = new javax.swing.JPanel();
        txtId = new lib.jdb.control.jdbtextfield.JDBTextField();
        txtEspecie = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDadosAdicionais = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtValorTotal = new javax.swing.JFormattedTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setTitle("Controle de Cheque/Cartão");

        Painel.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, new java.awt.Color(204, 204, 204), new java.awt.Color(153, 153, 153)));

        scrlChequeCartao.setFont(principal.FrmLogin.fontePadrao);

        tbChequeCartao.setToolTipText("Duplo clique para selecionar");
        tbChequeCartao.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbChequeCartaoMouseClicked(evt);
            }
        });
        scrlChequeCartao.setViewportView(tbChequeCartao);

        pnCaixa.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, new java.awt.Color(204, 204, 204), new java.awt.Color(153, 153, 153)), "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial", 1, 12), new java.awt.Color(102, 102, 102))); // NOI18N

        pnCodigo.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, new java.awt.Color(204, 204, 204), new java.awt.Color(153, 153, 153)), "Código", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial", 1, 12), new java.awt.Color(102, 102, 102))); // NOI18N

        txtIdLanc.setFocusable(false);
        txtIdLanc.setFont(principal.FrmLogin.fontePadrao);

        javax.swing.GroupLayout pnCodigoLayout = new javax.swing.GroupLayout(pnCodigo);
        pnCodigo.setLayout(pnCodigoLayout);
        pnCodigoLayout.setHorizontalGroup(
            pnCodigoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnCodigoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtIdLanc, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnCodigoLayout.setVerticalGroup(
            pnCodigoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnCodigoLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(txtIdLanc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5))
        );

        lblDataVenc.setFont(principal.FrmLogin.fontePadrao);
        lblDataVenc.setText("Data de Vencimento:");

        lblDataPag.setFont(principal.FrmLogin.fontePadrao);
        lblDataPag.setText("Data de Pagamento:");

        lblParcela.setFont(principal.FrmLogin.fontePadrao);
        lblParcela.setText("Parcela:");

        txtParcela.setFocusable(false);
        txtParcela.setFont(principal.FrmLogin.fontePadrao);

        lblDe.setFont(principal.FrmLogin.fontePadrao);
        lblDe.setText("de");

        txtParcelaTotal.setFocusable(false);
        txtParcelaTotal.setFont(principal.FrmLogin.fontePadrao);

        lblValor.setFont(principal.FrmLogin.fontePadrao);
        lblValor.setText("Valor:");

        btnPagar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/money.png"))); // NOI18N
        btnPagar.setFont(principal.FrmLogin.fontePadrao);
        btnPagar.setText("Pagar");
        btnPagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPagarActionPerformed(evt);
            }
        });

        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/return2.png"))); // NOI18N
        btnCancelar.setFont(principal.FrmLogin.fontePadrao);
        btnCancelar.setNextFocusableComponent(txtIdLanc);
        btnCancelar.setText("Limpar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        txtDataVenc.setFocusable(false);

        txtDataPgto.setFocusable(false);

        txtValor.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("###0.00#"))));
        txtValor.setFocusable(false);

        txtCaixa.setToolTipText("Somente caixas abertos no dia corrente e do tipo normal podem ser usados nas vendas");
        txtCaixa.setFocusable(false);

        btnConsultarCaixa.setFont(principal.FrmLogin.fontePadrao);
        btnConsultarCaixa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/look.png"))); // NOI18N
        btnConsultarCaixa.setMnemonic('c');
        btnConsultarCaixa.setText("Pesquisar");
        btnConsultarCaixa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarCaixaActionPerformed(evt);
            }
        });

        lblValor1.setFont(principal.FrmLogin.fontePadrao);
        lblValor1.setText("Caixa:");

        javax.swing.GroupLayout pnCaixaLayout = new javax.swing.GroupLayout(pnCaixa);
        pnCaixa.setLayout(pnCaixaLayout);
        pnCaixaLayout.setHorizontalGroup(
            pnCaixaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnCaixaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnCaixaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnCaixaLayout.createSequentialGroup()
                        .addComponent(pnCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnCaixaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnCaixaLayout.createSequentialGroup()
                                .addComponent(lblParcela)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(pnCaixaLayout.createSequentialGroup()
                                .addComponent(txtParcela, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblDe)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtParcelaTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 89, Short.MAX_VALUE)
                                .addComponent(btnPagar, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(pnCaixaLayout.createSequentialGroup()
                        .addGroup(pnCaixaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblValor)
                            .addComponent(txtValor, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)
                            .addComponent(lblValor1)
                            .addComponent(txtCaixa))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnCaixaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnCaixaLayout.createSequentialGroup()
                                .addComponent(btnConsultarCaixa)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(pnCaixaLayout.createSequentialGroup()
                                .addGroup(pnCaixaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtDataVenc, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblDataVenc))
                                .addGap(18, 18, 18)
                                .addGroup(pnCaixaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblDataPag)
                                    .addComponent(txtDataPgto, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, Short.MAX_VALUE)
                                .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        pnCaixaLayout.setVerticalGroup(
            pnCaixaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnCaixaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnCaixaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnCaixaLayout.createSequentialGroup()
                        .addComponent(lblParcela)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnCaixaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtParcela, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtParcelaTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDe)
                            .addComponent(btnPagar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(pnCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnCaixaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblDataPag)
                    .addGroup(pnCaixaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblDataVenc)
                        .addComponent(lblValor)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnCaixaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDataVenc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDataPgto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblValor1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnCaixaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCaixa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnConsultarCaixa))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnConsultar.setFont(principal.FrmLogin.fontePadrao);
        btnConsultar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/look.png"))); // NOI18N
        btnConsultar.setText("Consultar");
        btnConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarActionPerformed(evt);
            }
        });

        txtNomePessoa.setFocusable(false);

        pnCodigo1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, new java.awt.Color(204, 204, 204), new java.awt.Color(153, 153, 153)), "Código", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial", 1, 12), new java.awt.Color(102, 102, 102))); // NOI18N

        txtId.setFocusable(false);
        txtId.setFont(principal.FrmLogin.fontePadrao);

        javax.swing.GroupLayout pnCodigo1Layout = new javax.swing.GroupLayout(pnCodigo1);
        pnCodigo1.setLayout(pnCodigo1Layout);
        pnCodigo1Layout.setHorizontalGroup(
            pnCodigo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnCodigo1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtId, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnCodigo1Layout.setVerticalGroup(
            pnCodigo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnCodigo1Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5))
        );

        txtEspecie.setFocusable(false);

        txtDadosAdicionais.setColumns(20);
        txtDadosAdicionais.setRows(5);
        txtDadosAdicionais.setFocusable(false);
        jScrollPane1.setViewportView(txtDadosAdicionais);

        jLabel1.setText("Nome:");

        jLabel2.setText("Espécie:");

        txtValorTotal.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("###0.00#"))));
        txtValorTotal.setFocusable(false);

        jLabel3.setText("Valor:");

        jLabel4.setText("Dados adicionais:");

        javax.swing.GroupLayout PainelLayout = new javax.swing.GroupLayout(Painel);
        Painel.setLayout(PainelLayout);
        PainelLayout.setHorizontalGroup(
            PainelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelLayout.createSequentialGroup()
                .addGroup(PainelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PainelLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(pnCaixa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(PainelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(scrlChequeCartao))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PainelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(PainelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtValorTotal)
                            .addGroup(PainelLayout.createSequentialGroup()
                                .addGroup(PainelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(PainelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(pnCodigo1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel2)
                                        .addComponent(txtEspecie))
                                    .addComponent(jLabel3))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(PainelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PainelLayout.createSequentialGroup()
                                .addGroup(PainelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtNomePessoa)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 407, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnConsultar))
                            .addGroup(PainelLayout.createSequentialGroup()
                                .addGroup(PainelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel4))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        PainelLayout.setVerticalGroup(
            PainelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PainelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PainelLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(PainelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNomePessoa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnConsultar))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4))
                    .addGroup(PainelLayout.createSequentialGroup()
                        .addComponent(pnCodigo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PainelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(PainelLayout.createSequentialGroup()
                        .addComponent(txtEspecie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(10, 10, 10)
                .addComponent(scrlChequeCartao, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(pnCaixa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(Painel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(10, 10, 10))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(Painel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarActionPerformed
        if(idControleChCt != 0){
            limpar();
        }
        
        pesquisarControle = true;
        
        // campos para combobox sendo texto visual e o nome campo do banco referente.
        LinkedHashMap<String, String> combo = new LinkedHashMap<>();
        combo.put("Nome", "nome_pessoa");
        combo.put("Documento","doc_principal_pessoa");
        combo.put("Dados adicionais","dados_adicionais");
        combo.put("Valor", "valor_total");
        combo.put("Código", "id");

        // titulos para as colunas da tabela, sendo texto visual e nome campo do banco referente.
        LinkedHashMap<String, String> titulo = new LinkedHashMap<>();
        titulo.put("CÓDIGO", "id");
        titulo.put("DOCUMENTO", "doc_principal_pessoa");
        titulo.put("NOME", "nome_pessoa");
        titulo.put("VALOR", "valor_total");
        titulo.put("ADICIONAIS", "dados_adicionais");
        titulo.put("ESPÉCIE", "desc_especie");
        titulo.put("PARCELAS", "quantidade_parcelas");
        titulo.put("PARC.ABERTAS", "quantidade_parcelas_abertas");

        // campos que deseja deixar invisível, pode-se omitir.
        String[] invisivel = {"id_conta_receber", "id_item_caixa", "especie",
                            "data_inclusao", "data_modificacao"};

        // tamanho das colunas visíveis, pode-se omitir.
        int[] tamanho = {75, 100, 200, 100, 200, 100, 75, 75};

        pesquisa.iFrmPesquisa controleChCt;
        controleChCt = new pesquisa.iFrmPesquisa(this,
                "Pesquisa de Cheques e cartões",
                principal.Principal.conexao.getConexao(),
                qryChequeCartao,
                "id",
                combo,
                titulo,
                "SELECT "
                    + "id, "
                    + "doc_principal_pessoa, "
                    + "nome_pessoa, "
                    + "id_conta_receber, "
                    + "dados_adicionais, "
                    + "valor_total, "
                    + "id_item_caixa, "
                    + "especie, "
                    + "desc_especie, "
                    + "quantidade_parcelas, "
                    + "quantidade_parcelas_abertas, "
                    + "data_inclusao, "
                    + "data_modificacao "
                + "FROM "
                    + "vw_controle_cheque_cartao_especie_aberto",
                invisivel,
                tamanho);

        principal.FrmPrincipal.Desktop.add(controleChCt);
        controleChCt.setVisible(true);
    }//GEN-LAST:event_btnConsultarActionPerformed

    private void tbChequeCartaoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbChequeCartaoMouseClicked
        if(evt.getClickCount() == 2){
            alimentarCamposLancChCt();
        }
    }//GEN-LAST:event_tbChequeCartaoMouseClicked

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        limparLancamentos();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnPagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPagarActionPerformed
        if(FrmLogin.usuario.verificarPermissao(this, 1)){

            if(idCaixa != 0){
                if(sistema.Mensagem.showConfirmDialog(this, 
                        String.format("Deseja realmente pagar este %s", txtEspecie.getText()), 
                        "Atenção") == 0){
                    // pagamento do cheque/cartão
                    String sql = String.format(
                            "UPDATE "
                                + "lancamentos_controle_cheque_cartao "
                            + "SET "
                                + "data_pagamento = now() "
                            + "WHERE id = '%s'", idLancContrChCt );
                    enviarTransacao(sql);

                    // entrada em caixa tipo cofre em espécie dinheiro
                    sql = String.format(
                            "INSERT INTO itens_caixa("
                                + "id_caixa, "
                                + "descricao, "
                                + "valor, "
                                + "movimento) "
                            + "VALUES ("
                                + "'%s','%s','%s','%s')",
                            idCaixa,
                            String.format("Liquidação de %s ref. controle %s", 
                                    txtEspecie.getText(), 
                                    txtId.getText()),
                            txtValor.getValue(),
                            1);
                    enviarTransacao(sql);
                    
                    // log sistema
                    FrmLogin.log.gravar(
                    FrmLogin.usuario.getNomeUsuario(), "iFrmChequeCartao", 
                        txtId.getText(), "Liquidado " + txtEspecie.getText());

                    carregarQryLancChequeCartao();

                    limparLancamentos();
                }

            }else{
                JOptionPane.showMessageDialog(this, String.format(
                        "Selecione um caixa para pagar este %s", txtEspecie.getText()), 
                        "Atenção", JOptionPane.INFORMATION_MESSAGE);
                btnConsultarCaixa.requestFocus();
            }
        }
    }//GEN-LAST:event_btnPagarActionPerformed

    private void btnConsultarCaixaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarCaixaActionPerformed
        pesquisarCaixa = true;
        pesquisarControle = false;
        
        // campos para combobox sendo texto visual e o nome campo do banco referente.
        LinkedHashMap<String, String> combo = new LinkedHashMap<>();
        combo.put("Descrição", "descricao");
        combo.put("Código", "id");
        
        // titulos para as colunas da tabela, sendo texto visual e nome campo do banco referente.
        LinkedHashMap<String, String> titulo = new LinkedHashMap<>();
        titulo.put("CÓDIGO", "id");
        titulo.put("DESCRIÇÃO", "descricao");

        // campos que deseja deixar invisível, pode-se omitir.
        String[] invisivel = {"tipo"};

        // tamanho das colunas visíveis, pode-se omitir.
        int[] tamanho = null;
        
        pesquisa.iFrmPesquisa caixa;
        caixa = new pesquisa.iFrmPesquisa(this,
                "Pesquisa de Caixas",
                principal.Principal.conexao.getConexao(),
                qryCaixa,
                "id",
                combo,
                titulo,
                "SELECT id, descricao, tipo FROM vw_caixa_consulta_conta_pagar",
                invisivel,
                tamanho);

        
        principal.FrmPrincipal.Desktop.add(caixa);
        caixa.setVisible(true);
    }//GEN-LAST:event_btnConsultarCaixaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Painel;
    private lib.jdb.control.jdbbuttoncancel.JDBButtonCancel btnCancelar;
    private javax.swing.JButton btnConsultar;
    private javax.swing.JButton btnConsultarCaixa;
    private lib.jdb.control.jdbbuttonsave.JDBButtonSave btnPagar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblDataPag;
    private javax.swing.JLabel lblDataVenc;
    private javax.swing.JLabel lblDe;
    private javax.swing.JLabel lblParcela;
    private javax.swing.JLabel lblValor;
    private javax.swing.JLabel lblValor1;
    private javax.swing.JPanel pnCaixa;
    private javax.swing.JPanel pnCodigo;
    private javax.swing.JPanel pnCodigo1;
    private javax.swing.JScrollPane scrlChequeCartao;
    private lib.jdb.control.jdbtable.JDBTable tbChequeCartao;
    private javax.swing.JTextField txtCaixa;
    private javax.swing.JTextArea txtDadosAdicionais;
    private javax.swing.JTextField txtDataPgto;
    private javax.swing.JTextField txtDataVenc;
    private javax.swing.JTextField txtEspecie;
    private lib.jdb.control.jdbtextfield.JDBTextField txtId;
    private lib.jdb.control.jdbtextfield.JDBTextField txtIdLanc;
    private javax.swing.JTextField txtNomePessoa;
    private lib.jdb.control.jdbtextfield.JDBTextField txtParcela;
    private lib.jdb.control.jdbtextfield.JDBTextField txtParcelaTotal;
    private javax.swing.JFormattedTextField txtValor;
    private javax.swing.JFormattedTextField txtValorTotal;
    // End of variables declaration//GEN-END:variables
    
    public void atribuirCampos(){
        if(pesquisarControle){
            idControleChCt = qryChequeCartao.getCurrentFieldValueAsInteger("id");
            txtId.setText(String.valueOf(idControleChCt));
            txtNomePessoa.setText(qryChequeCartao.getCurrentFieldValueAsString("nome_pessoa"));
            txtEspecie.setText(qryChequeCartao.getCurrentFieldValueAsString("desc_especie"));
            txtValorTotal.setValue(qryChequeCartao.getCurrentFieldValueAsDouble("valor_total"));
            txtDadosAdicionais.setText(qryChequeCartao.getCurrentFieldValueAsString("dados_adicionais"));

            carregarQryLancChequeCartao();
            
            pesquisarControle = false;
        }else if(pesquisarCaixa){
            idCaixa = qryCaixa.getCurrentFieldValueAsInteger("id");
            txtCaixa.setText(qryCaixa.getCurrentFieldValueAsString("descricao"));
            
            pesquisarCaixa = false;
        }
    }
    
    public void carregarQryLancChequeCartao(){
        qryLancChequeCartao.setSQL(
                "SELECT "
                    + "id, "
                    + "numero_parcela, "
                    + "id_controle_cheque_cartao, "
                    + "valor_parcela, "
                    + "data_vencimento, "
                    + "data_pagamento, "
                    + "data_inclusao, "
                    + "data_modificacao "
                + "FROM "
                    + "lancamentos_controle_cheque_cartao "
                + " WHERE id_controle_cheque_cartao = " + idControleChCt);
        
        qryLancChequeCartao.execQuery();
    }
    
    private void limpar(){
        idControleChCt = 0;
        
        pesquisarControle = false;
        pesquisarCaixa = false;
        
        txtId.setText("");
        txtNomePessoa.setText("");
        txtEspecie.setText("");
        txtValorTotal.setValue(0.0);
        txtDadosAdicionais.setText("");
        
        limparLancamentos();
        
        carregarQryLancChequeCartao();
    }
    
    private void limparLancamentos(){
        idLancContrChCt = 0;
        idCaixa = 0;
        
        txtIdLanc.setText("");
        txtParcela.setText("");
        txtParcelaTotal.setText("");
        txtValor.setValue(0.0);
        txtDataVenc.setText("");
        txtDataPgto.setText(""); 
        
        txtCaixa.setText("");
        
        btnPagar.setEnabled(false);
    }
    
    private void alimentarCamposLancChCt(){
        if(qryLancChequeCartao.getCurrentFieldValueAsSQLTimestamp("data_pagamento") == null){
            idLancContrChCt = qryLancChequeCartao.getCurrentFieldValueAsInteger("id");

            txtIdLanc.setText(String.valueOf(idLancContrChCt));
            txtParcela.setText(qryLancChequeCartao.getCurrentFieldValueAsString("numero_parcela"));
            txtParcelaTotal.setText(qryChequeCartao.getCurrentFieldValueAsString("quantidade_parcelas"));
            txtValor.setValue(qryLancChequeCartao.getCurrentFieldValueAsDouble("valor_parcela"));
            txtDataVenc.setText(qryLancChequeCartao.getCurrentFieldValueAsString("data_vencimento"));
            txtDataPgto.setText(qryLancChequeCartao.getCurrentFieldValueAsString("data_pagamento")); 

            btnPagar.setEnabled(true);
        }else{
            JOptionPane.showMessageDialog(this, "Parcelas pagas não podem ser selecionadas",
                    "Atenção", JOptionPane.INFORMATION_MESSAGE);
        }
    }
    
    private void enviarTransacao(String sql){
        JDBUpdate transacao = new JDBUpdate();
        transacao.setJDBConnection(principal.Principal.conexao.getConexao());

        transacao.setSQL(sql);
        transacao.setShowMessageOnError(true);
        
        transacao.execUpdate();
    }
}

