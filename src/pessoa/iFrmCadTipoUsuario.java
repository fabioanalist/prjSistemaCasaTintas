/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pessoa;

import java.util.LinkedHashMap;
import javax.swing.JOptionPane;
import lib.jdb.jdbquery.JDBQuery;
import lib.jdb.jdbupdate.JDBUpdate;
import principal.FrmLogin;

/**
 *
 * @author patri
 */
public class iFrmCadTipoUsuario extends javax.swing.JInternalFrame {
    
    private JDBQuery qryTipoUsuario;
    boolean alterar=false;
    String sql;
    
    /**
     * Creates new form iFrmCadCategoriaProd
     */
    public iFrmCadTipoUsuario() {   
        
        qryTipoUsuario = new JDBQuery();
        qryTipoUsuario.setJDBConnection(principal.Principal.conexao.getConexao());
        qryTipoUsuario.setLanguage("pt");
        qryTipoUsuario.setSQL("SELECT * FROM tipos_usuario");
        
        initComponents();
        
        qryTipoUsuario.execQuery();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Painel = new javax.swing.JPanel();
        btnSalvar = new lib.jdb.control.jdbbuttonsave.JDBButtonSave();
        btnLimpar = new lib.jdb.control.jdbbuttoncancel.JDBButtonCancel();
        lblDesc = new javax.swing.JLabel();
        txtDesc = new lib.jdb.control.jdbtextfield.JDBTextField();
        pnCodigo = new javax.swing.JPanel();
        txtID = new lib.jdb.control.jdbtextfield.JDBTextField();
        btnConsultar = new javax.swing.JButton();
        pnDatas = new javax.swing.JPanel();
        lblInc = new javax.swing.JLabel();
        txtInc = new lib.jdb.control.jdbtextfield.JDBTextField();
        lblMod = new javax.swing.JLabel();
        txtMod = new lib.jdb.control.jdbtextfield.JDBTextField();
        jButton1 = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("Cadastro de Tipos de Usuário");

        Painel.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, new java.awt.Color(204, 204, 204), new java.awt.Color(153, 153, 153)));

        btnSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/save.png"))); // NOI18N
        btnSalvar.setMnemonic('s');
        btnSalvar.setFont(principal.FrmLogin.fontePadrao);
        btnSalvar.setText("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        btnLimpar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/return2.png"))); // NOI18N
        btnLimpar.setMnemonic('l');
        btnLimpar.setFont(principal.FrmLogin.fontePadrao);
        btnLimpar.setText("Limpar");
        btnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparActionPerformed(evt);
            }
        });

        lblDesc.setFont(principal.FrmLogin.fontePadrao);
        lblDesc.setText("Descrição:");

        txtDesc.setJDBQuery(qryTipoUsuario);
        txtDesc.setFont(principal.FrmLogin.fontePadrao);

        pnCodigo.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, new java.awt.Color(204, 204, 204), new java.awt.Color(153, 153, 153)), "Código", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial", 1, 12), new java.awt.Color(102, 102, 102))); // NOI18N

        txtID.setFocusable(false);
        txtID.setFont(principal.FrmLogin.fontePadrao);

        javax.swing.GroupLayout pnCodigoLayout = new javax.swing.GroupLayout(pnCodigo);
        pnCodigo.setLayout(pnCodigoLayout);
        pnCodigoLayout.setHorizontalGroup(
            pnCodigoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnCodigoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtID, javax.swing.GroupLayout.DEFAULT_SIZE, 69, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnCodigoLayout.setVerticalGroup(
            pnCodigoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnCodigoLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5))
        );

        btnConsultar.setFont(principal.FrmLogin.fontePadrao);
        btnConsultar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/look.png"))); // NOI18N
        btnConsultar.setMnemonic('c');
        btnConsultar.setText("Consultar");
        btnConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarActionPerformed(evt);
            }
        });

        pnDatas.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, new java.awt.Color(204, 204, 204), new java.awt.Color(153, 153, 153)), "Datas", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial", 1, 12), new java.awt.Color(102, 102, 102))); // NOI18N

        lblInc.setFont(principal.FrmLogin.fontePadrao);
        lblInc.setText("Inclusão:");

        txtInc.setFocusable(false);

        lblMod.setFont(principal.FrmLogin.fontePadrao);
        lblMod.setText("Modificação:");

        txtMod.setFocusable(false);

        javax.swing.GroupLayout pnDatasLayout = new javax.swing.GroupLayout(pnDatas);
        pnDatas.setLayout(pnDatasLayout);
        pnDatasLayout.setHorizontalGroup(
            pnDatasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnDatasLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(pnDatasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblInc)
                    .addComponent(txtInc, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 88, Short.MAX_VALUE)
                .addGroup(pnDatasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblMod)
                    .addComponent(txtMod, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10))
        );
        pnDatasLayout.setVerticalGroup(
            pnDatasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnDatasLayout.createSequentialGroup()
                .addGroup(pnDatasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnDatasLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtMod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnDatasLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(pnDatasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblInc)
                            .addComponent(lblMod))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                        .addComponent(txtInc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(10, 10, 10))
        );

        jButton1.setFont(principal.FrmLogin.fontePadrao);
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/delete.png"))); // NOI18N
        jButton1.setText("Remover");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PainelLayout = new javax.swing.GroupLayout(Painel);
        Painel.setLayout(PainelLayout);
        PainelLayout.setHorizontalGroup(
            PainelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(PainelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PainelLayout.createSequentialGroup()
                        .addComponent(pnCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PainelLayout.createSequentialGroup()
                        .addGroup(PainelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(pnDatas, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtDesc, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, PainelLayout.createSequentialGroup()
                                .addComponent(lblDesc)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, PainelLayout.createSequentialGroup()
                                .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnConsultar)
                                .addGap(18, 18, 18)
                                .addComponent(btnLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton1)))
                        .addGap(10, 10, 10))))
        );
        PainelLayout.setVerticalGroup(
            PainelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PainelLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(pnCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblDesc)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtDesc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(pnDatas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(10, 10, 10)
                .addGroup(PainelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnConsultar)
                    .addComponent(jButton1))
                .addGap(10, 10, 10))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(Painel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(10, 10, 10))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(Painel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarActionPerformed
        
        // Envia as informações para a janela padrão de consulta, para realizar a consulta.
        
        LinkedHashMap<String, String> combo = new LinkedHashMap<>();
        combo.put("Descrição", "descricao");
        
        // titulos para as colunas da tabela, sendo texto visual e nome campo do banco referente.
        LinkedHashMap<String, String> titulo = new LinkedHashMap<>();
        titulo.put("DESCRIÇÃO", "descricao");

        // campos que deseja deixar invisível, pode-se omitir.
        String[] invisivel = {
            "id",
            "data_inclusao", 
            "data_modificacao"};
        
        // tamanho das colunas visíveis, pode-se omitir.
        int[] tamanho = {546};
        
        pesquisa.iFrmPesquisa TipoUsuario;
        TipoUsuario = new pesquisa.iFrmPesquisa(this, "Pesquisa de Tipos de Usuário",
                principal.Principal.conexao.getConexao(),
                qryTipoUsuario, "id", combo, titulo,
                "SELECT * FROM tipos_usuario", invisivel, tamanho);
        
        principal.FrmPrincipal.Desktop.add(TipoUsuario);
        TipoUsuario.setVisible(true);
        
    }//GEN-LAST:event_btnConsultarActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        if(FrmLogin.usuario.verificarPermissao(this, 1)){
            // Realiza as verificações necessárias para salvar uma descrição.

            if (txtDesc.getText().isEmpty()){

                JOptionPane.showMessageDialog(this, "Informe a descrição.", 
                        "Atenção", JOptionPane.INFORMATION_MESSAGE);

            }else if (txtDesc.getText().length() > 25){

                JOptionPane.showMessageDialog(this, "Descrição deve ter no máximo 25 caracteres.", 
                        "Atenção", JOptionPane.INFORMATION_MESSAGE);

            // Descrição a partir daqui.

            }else{

                if (alterar == true){

                    if(sistema.Mensagem.showConfirmDialog(this,
                        "Deseja realmente alterar esta descrição?", "Confirmação") == 0){

                        sql = String.format(
                              "UPDATE tipos_usuario "
                                + "SET descricao='%s' "
                                + "WHERE id = '%s'",
                                txtDesc.getText(),
                                txtID.getText());

                        if(gravarInf(sql)){
                        
                            // registro de log
                            FrmLogin.log.gravar(FrmLogin.usuario.getNomeUsuario(),
                                    this, txtID.getText(), 2);
                        }
                        
                        limpa();

                    }

                }else if (alterar == false){

                    sql = String.format("INSERT INTO tipos_usuario ("
                    + "descricao)"
                    + "VALUES ('%s')",
                    txtDesc.getText());

                    if(gravarInf(sql)){
                    
                        JDBQuery temp = new JDBQuery();
                        temp.setJDBConnection(principal.Principal.conexao.getConexao());
                        temp.setSQL("SELECT LAST_INSERT_ID()");
                        temp.execQuery();
                        String id = temp.getCurrentFieldValueAsString(1);

                        // registro de log
                        FrmLogin.log.gravar(FrmLogin.usuario.getNomeUsuario(),
                               this, id, 1);
                    }

                    limpa();

                }

            }
        }
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparActionPerformed
        
        // Limpa os campos da janela.
        
        limpa();
        
    }//GEN-LAST:event_btnLimparActionPerformed

    private void btnRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverActionPerformed
        
    }//GEN-LAST:event_btnRemoverActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if(FrmLogin.usuario.verificarPermissao(this, 2)){
            // Remove uma descrição selecionada.

            if(alterar == false){

                JOptionPane.showMessageDialog(this, 
                        "Consulte um produto para excluir", "Atenção", 
                        JOptionPane.INFORMATION_MESSAGE);

                btnConsultar.requestFocus();

            }else{

                if(sistema.Mensagem.showConfirmDialog(this,
                        "Deseja realmente remover este tipo de usuário?", "Confirmação") == 0){

                        String sql = String.format("DELETE FROM tipos_usuario WHERE id = '%s'",
                                txtID.getText());

                        if(gravarInf(sql)){
                        
                            // registro de log
                            FrmLogin.log.gravar(FrmLogin.usuario.getNomeUsuario(),
                                        this, txtID.getText(), 3);
                        }
                        
                        limpa();

                }

            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Painel;
    private javax.swing.JButton btnConsultar;
    private lib.jdb.control.jdbbuttoncancel.JDBButtonCancel btnLimpar;
    private lib.jdb.control.jdbbuttonsave.JDBButtonSave btnSalvar;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel lblDesc;
    private javax.swing.JLabel lblInc;
    private javax.swing.JLabel lblMod;
    private javax.swing.JPanel pnCodigo;
    private javax.swing.JPanel pnDatas;
    private lib.jdb.control.jdbtextfield.JDBTextField txtDesc;
    private lib.jdb.control.jdbtextfield.JDBTextField txtID;
    private lib.jdb.control.jdbtextfield.JDBTextField txtInc;
    private lib.jdb.control.jdbtextfield.JDBTextField txtMod;
    // End of variables declaration//GEN-END:variables
    
    public void atribuirCampos(){ // Atribui os campos selecionados na janela de consulta.
        
        // captura os valor da query resultante da pesquisa e atribui nos campos. Ex:
        // String nomeCampoFormulario = query.getCurrentFieldValueAsString("nomeCampoTabelaReferente");
        // elemento.setText(nomeCampoFormulario);
        
        int id;
        String descricao, inclusao, modificacao;
        
        id = qryTipoUsuario.getCurrentFieldValueAsInteger("id");
        descricao = qryTipoUsuario.getCurrentFieldValueAsString("descricao");
        inclusao = qryTipoUsuario.getCurrentFieldValueAsString("data_inclusao");
        modificacao = qryTipoUsuario.getCurrentFieldValueAsString("data_modificacao");
        
        txtID.setText(String.valueOf(id));
        txtDesc.setText(descricao);
        txtInc.setText(inclusao);
        txtMod.setText(modificacao);
        
        alterar = true;
    }
    
    private boolean gravarInf(String sql){ // Grava as informações no banco
        JDBUpdate transacao = new JDBUpdate();
        transacao.setJDBConnection(principal.Principal.conexao.getConexao());

        transacao.setSQL(sql);
        transacao.setShowMessageOnError(false);
        
        boolean concluido = transacao.execUpdate();
        // Se a transação retornar erro:
        if(!concluido){
            //1062: Violação de primary key ou unique
            if(transacao.getErrorCode() == 1062){
                JOptionPane.showMessageDialog(this, 
                        "Tipo de usuário já cadastrado", "Atenção", 
                        JOptionPane.INFORMATION_MESSAGE);
            //1451: Violação de foreign key, contém relacionamento
            }else if(transacao.getErrorCode() == 1451){
                JOptionPane.showMessageDialog(this, 
                        "Tipo de usuário com relacionamento, não pode ser excluído", "Atenção", 
                        JOptionPane.INFORMATION_MESSAGE);                
            }
        }
        
        return concluido;
    }
    
    private void limpa(){ // Limpa os campos da janela.
        
        txtID.setText("");
        txtDesc.setText("");
        txtInc.setText("");
        txtMod.setText("");
        
        alterar = false;
        
    }
}
